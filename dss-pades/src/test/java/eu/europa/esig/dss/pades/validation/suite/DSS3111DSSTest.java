/**
 * DSS - Digital Signature Services
 * Copyright (C) 2015 European Commission, provided under the CEF programme
 * <p>
 * This file is part of the "DSS - Digital Signature Services" project.
 * <p>
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * <p>
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * <p>
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package eu.europa.esig.dss.pades.validation.suite;

import eu.europa.esig.dss.diagnostic.DiagnosticData;
import eu.europa.esig.dss.diagnostic.SignatureWrapper;
import eu.europa.esig.dss.enumerations.SignatureLevel;
import eu.europa.esig.dss.model.DSSDocument;
import eu.europa.esig.dss.model.InMemoryDocument;
import eu.europa.esig.dss.spi.DSSUtils;
import eu.europa.esig.dss.spi.x509.CertificateSource;
import eu.europa.esig.dss.spi.x509.CommonTrustedCertificateSource;

import static org.junit.jupiter.api.Assertions.assertTrue;

class DSS3111DSSTest extends AbstractPAdESTestValidation {

    @Override
    protected DSSDocument getSignedDocument() {
        return new InMemoryDocument(getClass().getResourceAsStream("/validation/pades-lt-extended-dss.pdf"));
    }

    @Override
    protected CertificateSource getTrustedCertificateSource() {
        CommonTrustedCertificateSource trustedCertificateSource = new CommonTrustedCertificateSource();
        trustedCertificateSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString("MIIEfTCCAuWgAwIBAgICA+kwDQYJKoZIhvcNAQENBQAwUDETMBEGA1UEAwwKZWUtcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMB4XDTIzMDQxMTA5MjkzOVoXDTI1MDQxMTA5MjkzOVowVzEaMBgGA1UEAwwRZWUtb2NzcC1yZXNwb25kZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAJ8+HAh8q9TDCiyAtrtKy1JMgS/PzO8iUvH6vNPk3o6x5hc4Ug+nFzDOw9aQb94W6aQXAlzJDPb+nmKw/ThoLr2z6lIbMhjTFOTUrrq2G6xS5hYM2Ql75G58VZmx5jcLwvftM9zRfXtm0q8fysGKTASAITQjGN5a6kbFeIdq9ZxInPAlXVZGjbUteTAWzhBYWG8vAHXVznH1dRMlmuYf3DF2+j01/9Ha6vL4WX8kh8N0qNwHJ1T/weIwR45cnK+vwWoz77b6fzSRFVHWrt0rh+YVJD6Hq7ZPHbwhf3EaQMC1ro2LGqMCtWzG4SjodRPwaB5/MGacxwBZXs+rjyRhtM3x5RR4xsVqbfQSNWelzfdwLAOE4IqpyXMWPmpQ6Ca+ZC9p03ocW0Z/2VzAeoOzJqfdOSkXeo+SpAbI9Fv0C3YWcN1McykcpCE8a2ScMvGZQHLwsivTAjCMfhTiuGqCbgxlVDGcQE1FjWG7PRfNcBmCS94sT3T2JX48WseEOy5ZywIDAQABo1owWDAOBgNVHQ8BAf8EBAMCB4AwFgYDVR0lAQH/BAwwCgYIKwYBBQUHAwkwHQYDVR0OBBYEFG1zAIs7JJPydMyxGByZnITVf1KgMA8GCSsGAQUFBzABBQQCBQAwDQYJKoZIhvcNAQENBQADggGBAD8Tf4I5jZ9UDOpXBkKDnd/Ux3zP5b9iHorWro1KccKXXYXuoD6imZ3Qf7W7WI/EbSTzdnk/N++GmoV0DtY9HY/asOYBHrt37c7EFqLAIsVhnWf6MVQX80mWDJ96qcTe+/zvGVbCYFHTINwVk5sPMXeX/99p3xS5W9UteGzNbinFdFfQPqyc+qfdY4qsGgiWm+XkIgVOVfCLdh2eHcXAmAPwBDiLXBgPcXVE7nwKK304OpxxJtGlkdXzzLLKR/TC4FxOYBRkenwFORsBSOknVJxoV6n/D0doz3XuA55gzaTP7eQ00sVaqNSjBNHYr0Q1KbBQFoVlFSZBy2U1HMAPdFC8xq2e7LDUoPQLyx0WW7cb4QUSMWpqa1DcT7R4VyYBlfp5aN8WknkBQMpnAqb8fiGut+ULDiJx0aEe1ljkMQEkU6B9DEFoDbnhEdeFRewNcKW6N2NvhVluv3Szouo2mVOdxNfNg6cAyX572nJxBjjRzCkh4qZu1xIIPr8XxK69JA=="));
        trustedCertificateSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString("MIIE9zCCA1+gAwIBAgICA+owDQYJKoZIhvcNAQENBQAwUDETMBEGA1UEAwwKZWUtcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMB4XDTIzMDUxMTA5MjkzOVoXDTI1MDMxMTA5MjkzOVowUDETMBEGA1UEAwwKZWUtZ29vZC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAzPjQJNI2CxWRhFijCJOVqTdfXJyaZ4rQwEuZLJmfYxP4/aQP5O6lOInbKcWE+eOv9A7kcbOKPadKhSUT5wR6bS4rlK3frErHlSSONJwB3Syrnyq/0iLVNqSyH6KSMjDzgh4rPl3fjwaATu9LDqk2Lg77IIYS1okBKAMf8mtAepRyYWyf1pCaGn/QXuXuP6RxFQIe+4CAbtP538nyKmP3yggd55EMtxfj2NPA5gsRyyP9p4CAKS/B9IMuM40McyqqjdTkuY4IH9rcrW5YzCE3vH06nRYh8omLuNkNe4tXQb0t68I++APvkoIC/kUbuab88tZhpuBsPcCqh7rq+U0SbAdvMrjze03PjFqQ9NUj8DymNVm3N3dM3Mbpqxk8Vd/oVD5uTOIfSx4Ur38o8LMg2WLY9au9vybNsFOBC6RwCfatF9QFSdJMoUF6Jv197/kJBEk7jmU7dEVwCrXSdhFEpixlAEtpUjNwn2EUh/Jg8YAJmYqfOhHPEhNldXTyUjqvAgMBAAGjgdowgdcwDgYDVR0PAQH/BAQDAgEGMEQGA1UdHwQ9MDswOaA3oDWGM2h0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NybC9lZS1yb290LWNhLmNybDBPBggrBgEFBQcBAQRDMEEwPwYIKwYBBQUHMAKGM2h0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9lZS1yb290LWNhLmNydDAdBgNVHQ4EFgQUxdpW3jLuOFcwi2SMyeSl95J2cuYwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0FAAOCAYEAfRCpW9JUhQeG4aA3PhpwGvZPkbs1LLK1gQG/4a+6lfVPW/6LWExT55v2eldv07glkMloXAB1rIUZkqNRvBqZztkxHBbgT35zxYA0CAdS490g/4z95HiDA/6kjaG47XrephNsleL8m8qm0o0MfukCpa1y8BJvjbwajdA/bKME+IDPAq6YmKvMuKTEv0fuGw1S0GsbRdBgCn7D5pDIDzbuvPEljt4oyaL5a02NP3EU363L/K9OhQ/Vn2ktJNrDkSVxTUK+N5mTQhLkRlupi16nwlpn0ONrldUEr/WOt3+5yWr7EabO6keDtGJ6i+SLs2jiITPXXgpXp7nypdolWbFmumR/YsCksI/BpDwNQpkWhWTYF1p/NvDvE3Di73u1N3A6GFaKsWhL/L21ARdNep4E7dMgERDx/Z1byVNJIo73dZUpCGRK5MD9POkKhVHC9dbhF2xf2lpX6mtAqeuvhWXIFmM/qUunLU8MlzA0F3k/PYZ8fX08dXKp2e8YTBfNbP60"));
        trustedCertificateSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString("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"));
        trustedCertificateSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString("MIIGcjCCBFqgAwIBAgIUQT3qGijCJThFVY4Efz4qi1ubrq4wDQYJKoZIhvcNAQELBQAwRjELMAkGA1UEBhMCTFUxFjAUBgNVBAoMDUx1eFRydXN0IFMuQS4xHzAdBgNVBAMMFkx1eFRydXN0IEdsb2JhbCBSb290IDIwHhcNMTUwMzA2MTQxMjE1WhcNMzUwMzA1MTMyMTU3WjBOMQswCQYDVQQGEwJMVTEWMBQGA1UECgwNTHV4VHJ1c3QgUy5BLjEnMCUGA1UEAwweTHV4VHJ1c3QgR2xvYmFsIFF1YWxpZmllZCBDQSAzMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAuZ5iXSmFbP80gWb0kieYsImcyIo3QYg+XA3NlwH6QtI0PgZEG9dSo8pM7VMIzE5zq8tgJ50HnPdYflvfhkEKvAW2NuNX6hi/6HK4Nye+kB+INjpfAHmLft3GT95e+frk/t7hJNorK44xzqfWZKLNGysEHIriddcePWOk3J/VMc9CsSemeZbmeZW1/xXeqolMS7JIDZ3+0DgVCYsKIK+b3sAQ8iqXbQlQyvymG6QyoQoJbuEP23iawRMWKNWk+sjzOkPAAQDtgEEVdggzzudLSM04C5CjeLlLYuXgljler9bKRk9wW8nkareLZsn9uCDihGXGyC5m9jseGY1KAnlV8usLjBFAiW5OCnzcOg+CPsVucoRhS6uvXcu7VtHRGo5yLysJVv7sj6cx5lMvQKAMLviVi3kphZKYfqVLAVFJpXTpunY2GayVGf/uOpzNoiSRpcxxYjmAlPKNeTgXVl5Mc0zojgT/MZTGFN7ov7n01yodN6OhfTADacvaKfj2C2CwdCJvMqvlUuCKrvuXbdZrtRm3BZXrghGhuQmG0Tir7VVCI0WZjVjyHs2rpUcCQ6+D1WymKhzp0mrXdaFzYRce7FrEk69JWzWVp/9/GKnnb0//camavEaI4V64MVxYAir5AL/j7d4JIOqhPPU14ajxmC6dEH84guVs0Lo/dwVTUzsCAwEAAaOCAU4wggFKMBIGA1UdEwEB/wQIMAYBAf8CAQAwQwYDVR0gBDwwOjA4BggrgSsBAQEKAzAsMCoGCCsGAQUFBwIBFh5odHRwczovL3JlcG9zaXRvcnkubHV4dHJ1c3QubHUwagYIKwYBBQUHAQEEXjBcMCsGCCsGAQUFBzABhh9odHRwOi8vbHRncm9vdC5vY3NwLmx1eHRydXN0Lmx1MC0GCCsGAQUFBzAChiFodHRwOi8vY2EubHV4dHJ1c3QubHUvTFRHUkNBMi5jcnQwDgYDVR0PAQH/BAQDAgEGMB8GA1UdIwQYMBaAFP8YKHb5SAUsoa7xKxsrslP4S3yzMDMGA1UdHwQsMCowKKAmoCSGImh0dHA6Ly9jcmwubHV4dHJ1c3QubHUvTFRHUkNBMi5jcmwwHQYDVR0OBBYEFGOPwosDsauO2FNHlh2ZqH32rKh1MA0GCSqGSIb3DQEBCwUAA4ICAQADB6M/edbOO9iJCOnVxayJ1NBk08/BVKlHwe7HBYAzT6Kmo3TbMUwOpcGI2e/NBCR3F4wTzXOVvFmvdBl7sdS6uMSLBTrav+5LChcFDBQj26X5VQDcXkA8b/u6J4Ve7CwoSesYg9H0fsJ3v12QrmGUUao9gbamKP1TFriO+XiIaDLYectruusRktIke9qy8MCpNSarZqr3oD3c/+N5D3lDlGpaz1IL8TpbubFEQHPCr6JiwR+qSqGRfxv8vIvOOAVxe7np5QhtwmCkXdMOPQ/XOOuEA06bez+zHkASX64at7dXru+4JUEbpijjMA+1jbFZr20OeBIQZL7oEst+FF8lFuvmucC9TS9QnlF28WJExvpIknjS7LhFMGXB9w380q38ZOuKjPZpoztYeyUpf8gxzV7fE5Q1okhnsDZ+12vBzBruzJcwtNuXyLyIh3fVN0LunVd+NP2kGjB2t9WD2Y0CaKxWx8snDdrSbAi46TpNoe04eroWgZOvdN0hEmf2d8tYBSJ/XZekU9sCAww5vxHnXJi6CZHhjt8f1mMhyE2gBvmpk4CFetViO2sG0n/nsxCQNpnclsax/eJuXmGiZ3OPCIRijI5gy3pLRgnbgLyktWoOkmT/gxtWDLfVZwEt52JL8d550KIgttyRqX81LJWGSDdpnzeRVQEnzAt6+RebAQ=="));
        trustedCertificateSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString("MIIE/zCCA2egAwIBAgICBLAwDQYJKoZIhvcNAQENBQAwUDETMBEGA1UEAwwKZWUtcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMB4XDTIzMDUxMTA5MjkzOVoXDTI1MDMxMTA5MjkzOVowUTEUMBIGA1UEAwwLZWUtZ29vZC10c2ExGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAJTRA9R5gZuprIc0lc43I7aOvSU4hhtsWQhmdrU9JYPMUpSTtqWATL5sqcQOTHbkoYqQIfwuah6jL0ro6tNYbogDCnXXStY8ODkotPZ+Xqk+UQSJhegEsw2snaXFh8rWzrsHlOliddZTUQhwpUpb6AvKJEB14+tWYSq6AFlG0xDgqkNhEp65FkRF8H9DPHZVKYpEpExwz6NiE4uqCPQV5aVfCSyGHlJ71i7ni+wIzP+8xFvqS3Sbw5djwMbDTnZqw0ZXyhevBl4PrzCVYxFdnKR4UhYsCvWooX0uNnBa1Jr+XNRBdDlKSJ7y+BZDC4C0Z6isPjHT7Hh/REA7jiwPpu8aGdhaoz6AdeFdip3rcgpuQVVkIArLadX+uATknI9ncCsoJweEH5n+ekrB5mwvCDLNE0sWjcllnb2u5jlSohUzM8fXugUmPmeOQqq4ofJ0enVajxFKCoUasNd1Cgk+PZOBSkqDsB4QWEL//QMrVtK4Cn73ZrFav3HlyXMpxDHooQIDAQABo4HhMIHeMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCDBEBgNVHR8EPTA7MDmgN6A1hjNodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcmwvZWUtcm9vdC1jYS5jcmwwTwYIKwYBBQUHAQEEQzBBMD8GCCsGAQUFBzAChjNodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcnQvZWUtcm9vdC1jYS5jcnQwHQYDVR0OBBYEFItWjrvIY/8NS57Dp0WJK81rQFJEMA0GCSqGSIb3DQEBDQUAA4IBgQBIGwJxnE2v8ebe4WjXY7gBaQQ/7Rc0YqmFg99xzmNPn7ihw02zwNBAWtFoYNxWFYRoDSBhIb4+HXTs97FTm3ytIOzEzC8SrOfDbsOOi5Sb/GwPLG7EWmBP1gPOQRttoZKF6/VPMc16PeY/ZTOzWWB3CxyQ2HjOBZjnv0ZYYyM4BLKG9K5adyCisbPfenMFg4zQb7ypLxLtys0NJtDjjy8MjPM7aksqFPtUNHdPk1eftpN0EoaEo0WU0kX2YyqIHYSuS27MrB//+9sQpisSXiX+3d3ixKqO9LLA/kuafKrlKnruXVyMTUDjbqMaseLSsSttCMk1CGk0flWpQGmJZKrTTgCEOgUc3GOCl6a6J2Uj565cHsXdV7K47u6sZAEEKIvyozpkT7cF4zlnzbUBgzbeWA0iapCfKEQzxz25oDsRhcbp+tTlynvPRaVfqTfu4lwr2uyY4IWnkaGe0MA5oHxxGtwD+aFR1fKHKFySVsmYs8tYs7sNuzRvWXZ3mtsN7To="));
        return trustedCertificateSource;
    }

    @Override
    protected void checkSignatureLevel(DiagnosticData diagnosticData) {
        boolean ltLevelSigFound = false;
        boolean tLevelSigFound = false;
        for (SignatureWrapper signatureWrapper : diagnosticData.getSignatures()) {
            if (SignatureLevel.PAdES_BASELINE_LT.equals(signatureWrapper.getSignatureFormat())) {
                ltLevelSigFound = true;
            } else if (SignatureLevel.PAdES_BASELINE_T.equals(signatureWrapper.getSignatureFormat())) {
                tLevelSigFound = true;
            }
        }
        assertTrue(ltLevelSigFound);
        assertTrue(tLevelSigFound);
    }

}
