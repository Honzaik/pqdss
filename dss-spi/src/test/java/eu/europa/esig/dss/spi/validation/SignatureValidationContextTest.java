/**
 * DSS - Digital Signature Services
 * Copyright (C) 2015 European Commission, provided under the CEF programme
 * <p>
 * This file is part of the "DSS - Digital Signature Services" project.
 * <p>
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * <p>
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * <p>
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package eu.europa.esig.dss.spi.validation;

import eu.europa.esig.dss.alert.ExceptionOnStatusAlert;
import eu.europa.esig.dss.alert.SilentOnStatusAlert;
import eu.europa.esig.dss.enumerations.TimestampType;
import eu.europa.esig.dss.model.InMemoryDocument;
import eu.europa.esig.dss.model.x509.CertificateToken;
import eu.europa.esig.dss.spi.DSSUtils;
import eu.europa.esig.dss.spi.SignatureCertificateSource;
import eu.europa.esig.dss.spi.client.http.DataLoader;
import eu.europa.esig.dss.spi.client.http.IgnoreDataLoader;
import eu.europa.esig.dss.spi.client.http.MemoryDataLoader;
import eu.europa.esig.dss.spi.signature.AdvancedSignature;
import eu.europa.esig.dss.spi.x509.CertificateSource;
import eu.europa.esig.dss.spi.x509.CommonTrustedCertificateSource;
import eu.europa.esig.dss.spi.x509.aia.DefaultAIASource;
import eu.europa.esig.dss.spi.x509.revocation.crl.ExternalResourcesCRLSource;
import eu.europa.esig.dss.spi.x509.revocation.crl.OfflineCRLSource;
import eu.europa.esig.dss.spi.x509.revocation.ocsp.ExternalResourcesOCSPSource;
import eu.europa.esig.dss.spi.x509.revocation.ocsp.OfflineOCSPSource;
import eu.europa.esig.dss.spi.x509.tsp.TimestampToken;
import eu.europa.esig.dss.utils.Utils;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.security.PublicKey;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

class SignatureValidationContextTest {

	@Test
	void test() throws Exception {
		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		CertificateSource certSource = new CommonTrustedCertificateSource();
		certSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString(
				"MIIDZDCCAkygAwIBAgICC7gwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UEBhMCTFUxFjAUBgNVBAoTDUx1eFRydXN0IHMuYS4xHTAbBgNVBAMTFEx1eFRydXN0IEdsb2JhbCBSb290MB4XDTExMDMxNzA5NTEzN1oXDTIxMDMxNzA5NTEzN1owRDELMAkGA1UEBhMCTFUxFjAUBgNVBAoTDUx1eFRydXN0IHMuYS4xHTAbBgNVBAMTFEx1eFRydXN0IEdsb2JhbCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsn+nQPAiygz267Hxyw6VV0B1r6A/Ps7sqjJX5hmxZ0OYWmt8s7j6eJyqpoSyYBuAQc5jzR8XCJmk9e8+EsdMsFeaXHhAePxFjdqRZ9w6Ubltc+a3OY52OrQfBfVpVfmTz3iISr6qm9d7R1tGBEyCFqY19vx039a0r9jitScRdFmiwmYsaArhmIiIPIoFdRTjuK7zCISbasE/MRivJ6VLm6T9eTHemD0OYcqHmMH4ijCc+j4z1aXEAwfh95Z0GAAnOCfRK6qq4UFFi2/xJcLcopeVx0IUM115hCNq52XAV6DYXaljAeew5Ivo+MVjuOVsdJA9x3f8K7p56aTGEnin/wIDAQABo2AwXjAMBgNVHRMEBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQXFYWJCS8kh28/HRvk8pZ5g0gTzjAdBgNVHQ4EFgQUFxWFiQkvJIdvPx0b5PKWeYNIE84wDQYJKoZIhvcNAQELBQADggEBAFrwHNDUUM9Bfua4nX3DcNBeNv9ujnov3kgR1TQuPLdFwlQlp+HBHjeDtpSutkVIA+qVvuucarQ3XB8u02uCgUNbCj8RVWOs+nwIAjegPDkEM/6XMshS5dklTbDG7mgfcKpzzlcD3H0KDTPy0lrfCmw7zBFRlxqkIaKFNQLXgCLShLL4wKpov9XrqsMLq6F8K/f1O4fhVFfsBSTveUJO84ton+Ruy4KZycwq3FPCH3CDqyEPVrRI/98HIrOM+R2mBN8tAza53W/+MYhm/2xtRDSvCHc+JtJy9LtHVpM8mGPhM7uZI5K1g3noHZ9nrWLWidb2/CfeMifLhNp3hSGhEiE="));
		certificateVerifier.setTrustedCertSources(certSource);

		SignatureValidationContext svc = new SignatureValidationContext();
		svc.initialize(certificateVerifier);
		CertificateToken certificateToken = DSSUtils.loadCertificateFromBase64EncodedString(
				"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");
		svc.addCertificateTokenForVerification(certificateToken);
		svc.addCertificateTokenForVerification(certificateToken); // add twice for test

		TimestampToken timestampToken = new TimestampToken(Utils.fromBase64(
				"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"),
				TimestampType.SIGNATURE_TIMESTAMP);
		svc.addTimestampTokenForVerification(timestampToken);
		svc.addTimestampTokenForVerification(timestampToken); // add twice for test

		svc.validate();

		Set<CertificateToken> processedCertificates = svc.getProcessedCertificates();
		assertEquals(4, processedCertificates.size()); // cert chain + 1 cert for tsp

		Set<TimestampToken> processedTimestamps = svc.getProcessedTimestamps();
		assertEquals(1, processedTimestamps.size());
	}

	@Test
	void testCannotDownload() throws Exception {
		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		CertificateSource certSource = new CommonTrustedCertificateSource();
		certSource.addCertificate(DSSUtils.loadCertificateFromBase64EncodedString(
				"MIIDZDCCAkygAwIBAgICC7gwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UEBhMCTFUxFjAUBgNVBAoTDUx1eFRydXN0IHMuYS4xHTAbBgNVBAMTFEx1eFRydXN0IEdsb2JhbCBSb290MB4XDTExMDMxNzA5NTEzN1oXDTIxMDMxNzA5NTEzN1owRDELMAkGA1UEBhMCTFUxFjAUBgNVBAoTDUx1eFRydXN0IHMuYS4xHTAbBgNVBAMTFEx1eFRydXN0IEdsb2JhbCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsn+nQPAiygz267Hxyw6VV0B1r6A/Ps7sqjJX5hmxZ0OYWmt8s7j6eJyqpoSyYBuAQc5jzR8XCJmk9e8+EsdMsFeaXHhAePxFjdqRZ9w6Ubltc+a3OY52OrQfBfVpVfmTz3iISr6qm9d7R1tGBEyCFqY19vx039a0r9jitScRdFmiwmYsaArhmIiIPIoFdRTjuK7zCISbasE/MRivJ6VLm6T9eTHemD0OYcqHmMH4ijCc+j4z1aXEAwfh95Z0GAAnOCfRK6qq4UFFi2/xJcLcopeVx0IUM115hCNq52XAV6DYXaljAeew5Ivo+MVjuOVsdJA9x3f8K7p56aTGEnin/wIDAQABo2AwXjAMBgNVHRMEBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQXFYWJCS8kh28/HRvk8pZ5g0gTzjAdBgNVHQ4EFgQUFxWFiQkvJIdvPx0b5PKWeYNIE84wDQYJKoZIhvcNAQELBQADggEBAFrwHNDUUM9Bfua4nX3DcNBeNv9ujnov3kgR1TQuPLdFwlQlp+HBHjeDtpSutkVIA+qVvuucarQ3XB8u02uCgUNbCj8RVWOs+nwIAjegPDkEM/6XMshS5dklTbDG7mgfcKpzzlcD3H0KDTPy0lrfCmw7zBFRlxqkIaKFNQLXgCLShLL4wKpov9XrqsMLq6F8K/f1O4fhVFfsBSTveUJO84ton+Ruy4KZycwq3FPCH3CDqyEPVrRI/98HIrOM+R2mBN8tAza53W/+MYhm/2xtRDSvCHc+JtJy9LtHVpM8mGPhM7uZI5K1g3noHZ9nrWLWidb2/CfeMifLhNp3hSGhEiE="));
		certificateVerifier.setTrustedCertSources(certSource);

		certificateVerifier.setAIASource(null);

		ValidationContext vc = new SignatureValidationContext();
		vc.initialize(certificateVerifier);
		CertificateToken certificateToken = DSSUtils.loadCertificateFromBase64EncodedString(
				"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");
		vc.addCertificateTokenForVerification(certificateToken);

		TimestampToken timestampToken = new TimestampToken(Utils.fromBase64(
				"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"),
				TimestampType.SIGNATURE_TIMESTAMP);
		vc.addTimestampTokenForVerification(timestampToken);

		vc.validate();

		Set<CertificateToken> processedCertificates = vc.getProcessedCertificates();
		assertEquals(2, processedCertificates.size()); // cert + tsp cert

		Set<TimestampToken> processedTimestamps = vc.getProcessedTimestamps();
		assertEquals(1, processedTimestamps.size());
	}

	@Test
	void testBridgeCertificateMovesUpInsteadOfSidewaysWithoutRootOnValidation() {
		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		CertificateSource certSource = new CommonTrustedCertificateSource();
		certificateVerifier.setTrustedCertSources(certSource);

		Map<String, byte[]> dataMap = new HashMap<>();
		dataMap.put("http://ssp-aia.symauth.com/STNSSP/Certs_issued_to_Class3SSPCA-G3.p7c", Utils.fromBase64(
				"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"));
		dataMap.put("http://http.fpki.gov/bridge/caCertsIssuedTofbca2016.p7c", Utils.fromBase64(
				"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"));

		// Root Cert with issuer + AIA
		dataMap.put("http://http.fpki.gov/fcpca/caCertsIssuedTofcpca.p7c", Utils.fromBase64(
				"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"));

		certificateVerifier.setAIASource(new DefaultAIASource(new MemoryDataLoader(dataMap)));

		ValidationContext vc = new SignatureValidationContext();
		vc.initialize(certificateVerifier);
		CertificateToken certificateToken = DSSUtils.loadCertificateFromBase64EncodedString(
				"MIIFSzCCBDOgAwIBAgIQY1NDO8Vfvy5VCrBZTWzlwzANBgkqhkiG9w0BAQsFADCBgTELMAkGA1UEBhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMR8wHQYDVQQLExZTeW1hbnRlYyBUcnVzdCBOZXR3b3JrMTIwMAYDVQQDEylTeW1hbnRlYyBDbGFzcyAzIFNTUCBJbnRlcm1lZGlhdGUgQ0EgLSBHMzAeFw0xNjAxMTkwMDAwMDBaFw0yNDA5MjgyMzU5NTlaMFUxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxTdXJlSUQsIEluYy4xFTATBgNVBAsTDFN1cmVJRCBQSVYtSTEYMBYGA1UEAxMPU3VyZUlEIEluYy4gQ0ExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvZLi3n+WCWDKxdmixRmYnvLBpxjyu7VCbyTien7eXkuiKMiYQFn7NMmAX5ZyMy1MqvRg7BHnTvcSnQTgdrfEbX47b/vytHnksrT/vLyQ0Na2y+py6w/gxjirYsdoUdfM0toO3aFS8kqGSGJ63BPMteqwSV93tbUaE/I8knPy7oYxMKCMA+cU0hNlMvpyYW2thXetIzPSgc2/UuwP/irhTA3oguiA/KQ8LRzMNFCnLk3O1tiqxDiIp7WJElRjWqVfItzBIOUpoMpoc8y8kpitNzdSknFSFW0Tpfa0XSnO9hUZmjAryxmIztL9Bw6yJENswxnxN3KkzZ82QixNwZRriwIDAQABo4IB6DCCAeQwEgYDVR0TAQH/BAgwBgEB/wIBADCBgAYDVR0gBHkwdzAPBg1ghkgBhvhFAQcXAwEGMA8GDWCGSAGG+EUBBxcDAQcwDwYNYIZIAYb4RQEHFwMBDTAPBg1ghkgBhvhFAQcXAwEOMA8GDWCGSAGG+EUBBxcDAQ8wDwYNYIZIAYb4RQEHFwMBETAPBg1ghkgBhvhFAQcXAwESMIGJBggrBgEFBQcBAQR9MHswJwYIKwYBBQUHMAGGG2h0dHA6Ly9zc3Atb2NzcC5zeW1hdXRoLmNvbTBQBggrBgEFBQcwAoZEaHR0cDovL3NzcC1haWEuc3ltYXV0aC5jb20vU1ROU1NQL0NlcnRzX2lzc3VlZF90b19DbGFzczNTU1BDQS1HMy5wN2MwRAYDVR0fBD0wOzA5oDegNYYzaHR0cDovL3NzcC1jcmwuc3ltYXV0aC5jb20vU1ROU1NQL0NsYXNzM1NTUENBRzMuY3JsMA4GA1UdDwEB/wQEAwIBBjApBgNVHREEIjAgpB4wHDEaMBgGA1UEAxMRU3ltYW50ZWNQS0ktMi0yOTIwHQYDVR0OBBYEFALCBm2w5wyaemW6pQWUsTNowLSYMB8GA1UdIwQYMBaAFDUmfVCV4aHBvQXVw513QscME5aMMA0GCSqGSIb3DQEBCwUAA4IBAQA1Q6gT34WR/KHhwdXb+lDWRyGJQoIpxD0LiYK1bASBcTYP4rPMYwl8c2030mPLeSZtDP9T8UxMvJ/kYsjCdVj/c6BqS0xximNskYHOW8sUeO8XMQkbnNiIYaxMZ0NaMCjamh7rOUdfVdgg7sW11lQ2qVfsviG8EG+7BmA9etVtpTWznr1aiit4rMwF2dPq94fiKOg7x9gNmo6ev6OtBVXZB/Bayg4nzPlRQk2LMEaNzvDBgPJHueHu/x9E+nMzdgOfDV4JeBPhcLXs2tKAIgGitARvTGtBwe85o1GovSyS2GRP4x67p3co0iod70cyxduISwXgCNyZSTrxqOftRMu7");
		vc.addCertificateTokenForVerification(certificateToken);

		vc.validate();

		Set<CertificateToken> processedCertificates = vc.getProcessedCertificates();
		assertEquals(4, processedCertificates.size()); // cert chain only going up, if it went sideways it could get 60+ certs
		assertNull(getRootCertificate(certificateToken, processedCertificates)); // given that the root certificate has an issuer, it's not possible to
																					// determine the trust anchor
	}

	@Test
	void testBridgeCertificateMovesUpInsteadOfSidewaysAndFindsRootOnValidation() {
		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		CertificateSource certSource = new CommonTrustedCertificateSource();
		certificateVerifier.setTrustedCertSources(certSource);

		Map<String, byte[]> dataMap = new HashMap<>();
		dataMap.put("http://ssp-aia.symauth.com/STNSSP/Certs_issued_to_Class3SSPCA-G3.p7c", Utils.fromBase64(
				"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"));
		dataMap.put("http://http.fpki.gov/bridge/caCertsIssuedTofbca2016.p7c", Utils.fromBase64(
				""));

		// Root cert self-signed
		dataMap.put("http://http.fpki.gov/fcpca/caCertsIssuedTofcpca.p7c", Utils.fromBase64(
				"MIIEYDCCA0igAwIBAgICATAwDQYJKoZIhvcNAQELBQAwWTELMAkGA1UEBhMCVVMxGDAWBgNVBAoTD1UuUy4gR292ZXJubWVudDENMAsGA1UECxMERlBLSTEhMB8GA1UEAxMYRmVkZXJhbCBDb21tb24gUG9saWN5IENBMB4XDTEwMTIwMTE2NDUyN1oXDTMwMTIwMTE2NDUyN1owWTELMAkGA1UEBhMCVVMxGDAWBgNVBAoTD1UuUy4gR292ZXJubWVudDENMAsGA1UECxMERlBLSTEhMB8GA1UEAxMYRmVkZXJhbCBDb21tb24gUG9saWN5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2HX7NRY0WkG/Wq9cMAQUHK14RLXqJup1YcfNNnn4fNi9KVFmWSHjeavUeL6wLbCh1bI1FiPQzB6+Duir3MPJ1hLXp3JoGDG4FyKyPn66CG3G/dFYLGmgA/Aqo/Y/ISU937cyxY4nsyOl4FKzXZbpsLjFxZ+7xaBugkC7xScFNknWJidpDDSPzyd6KgqjQV+NHQOGgxXgVcHFmCye7Bpy3EjBPvmE0oSCwRvDdDa3ucc2Mnr4MrbQNq4iGDGMUHMhnv6DOzCIJOPpwX7e7ZjHH5IQip9bYi+dpLzVhW86/clTpyBLqtsgqyFOHQ1O5piF5asRR12dP8QjwOMUBm7+nQIDAQABo4IBMDCCASwwDwYDVR0TAQH/BAUwAwEB/zCB6QYIKwYBBQUHAQsEgdwwgdkwPwYIKwYBBQUHMAWGM2h0dHA6Ly9odHRwLmZwa2kuZ292L2ZjcGNhL2NhQ2VydHNJc3N1ZWRCeWZjcGNhLnA3YzCBlQYIKwYBBQUHMAWGgYhsZGFwOi8vbGRhcC5mcGtpLmdvdi9jbj1GZWRlcmFsJTIwQ29tbW9uJTIwUG9saWN5JTIwQ0Esb3U9RlBLSSxvPVUuUy4lMjBHb3Zlcm5tZW50LGM9VVM/Y0FDZXJ0aWZpY2F0ZTtiaW5hcnksY3Jvc3NDZXJ0aWZpY2F0ZVBhaXI7YmluYXJ5MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUrQx6dVzl85jEeZgOrCj9l/TnAvwwDQYJKoZIhvcNAQELBQADggEBAI9z2uF/gLGH9uwsz9GEYx728Yi3mvIRte9UrYpuGDco71wb5O9Qt2wmGCMiTR0mRyDpCZzicGJxqxHPkYnos/UqoEfAFMtOQsHdDA4b8Idb7OV316rgVNdF9IU+7LQd3nyKf1tNnJaK0KIyn9psMQz4pO9+c+iR3Ah6cFqgr2KBWfgAdKLI3VTKQVZHvenAT+0g3eOlCd+uKML80cgX2BLHb94u6b2akfI8WpQukSKAiaGMWMyDeiYZdQKlDn0KJnNR6obLB6jI/WNaNZvSr79PMUjBhHDbNXuaGQ/lj/RqDG8z2esccKIN47lQA2EC/0rskqTcLe4qNJMHtyznGI8="));
		certificateVerifier.setAIASource(new DefaultAIASource(new MemoryDataLoader(dataMap)));

		ValidationContext vc = new SignatureValidationContext();
		vc.initialize(certificateVerifier);
		CertificateToken certificateToken = DSSUtils.loadCertificateFromBase64EncodedString(
				"MIIFSzCCBDOgAwIBAgIQY1NDO8Vfvy5VCrBZTWzlwzANBgkqhkiG9w0BAQsFADCBgTELMAkGA1UEBhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMR8wHQYDVQQLExZTeW1hbnRlYyBUcnVzdCBOZXR3b3JrMTIwMAYDVQQDEylTeW1hbnRlYyBDbGFzcyAzIFNTUCBJbnRlcm1lZGlhdGUgQ0EgLSBHMzAeFw0xNjAxMTkwMDAwMDBaFw0yNDA5MjgyMzU5NTlaMFUxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxTdXJlSUQsIEluYy4xFTATBgNVBAsTDFN1cmVJRCBQSVYtSTEYMBYGA1UEAxMPU3VyZUlEIEluYy4gQ0ExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvZLi3n+WCWDKxdmixRmYnvLBpxjyu7VCbyTien7eXkuiKMiYQFn7NMmAX5ZyMy1MqvRg7BHnTvcSnQTgdrfEbX47b/vytHnksrT/vLyQ0Na2y+py6w/gxjirYsdoUdfM0toO3aFS8kqGSGJ63BPMteqwSV93tbUaE/I8knPy7oYxMKCMA+cU0hNlMvpyYW2thXetIzPSgc2/UuwP/irhTA3oguiA/KQ8LRzMNFCnLk3O1tiqxDiIp7WJElRjWqVfItzBIOUpoMpoc8y8kpitNzdSknFSFW0Tpfa0XSnO9hUZmjAryxmIztL9Bw6yJENswxnxN3KkzZ82QixNwZRriwIDAQABo4IB6DCCAeQwEgYDVR0TAQH/BAgwBgEB/wIBADCBgAYDVR0gBHkwdzAPBg1ghkgBhvhFAQcXAwEGMA8GDWCGSAGG+EUBBxcDAQcwDwYNYIZIAYb4RQEHFwMBDTAPBg1ghkgBhvhFAQcXAwEOMA8GDWCGSAGG+EUBBxcDAQ8wDwYNYIZIAYb4RQEHFwMBETAPBg1ghkgBhvhFAQcXAwESMIGJBggrBgEFBQcBAQR9MHswJwYIKwYBBQUHMAGGG2h0dHA6Ly9zc3Atb2NzcC5zeW1hdXRoLmNvbTBQBggrBgEFBQcwAoZEaHR0cDovL3NzcC1haWEuc3ltYXV0aC5jb20vU1ROU1NQL0NlcnRzX2lzc3VlZF90b19DbGFzczNTU1BDQS1HMy5wN2MwRAYDVR0fBD0wOzA5oDegNYYzaHR0cDovL3NzcC1jcmwuc3ltYXV0aC5jb20vU1ROU1NQL0NsYXNzM1NTUENBRzMuY3JsMA4GA1UdDwEB/wQEAwIBBjApBgNVHREEIjAgpB4wHDEaMBgGA1UEAxMRU3ltYW50ZWNQS0ktMi0yOTIwHQYDVR0OBBYEFALCBm2w5wyaemW6pQWUsTNowLSYMB8GA1UdIwQYMBaAFDUmfVCV4aHBvQXVw513QscME5aMMA0GCSqGSIb3DQEBCwUAA4IBAQA1Q6gT34WR/KHhwdXb+lDWRyGJQoIpxD0LiYK1bASBcTYP4rPMYwl8c2030mPLeSZtDP9T8UxMvJ/kYsjCdVj/c6BqS0xximNskYHOW8sUeO8XMQkbnNiIYaxMZ0NaMCjamh7rOUdfVdgg7sW11lQ2qVfsviG8EG+7BmA9etVtpTWznr1aiit4rMwF2dPq94fiKOg7x9gNmo6ev6OtBVXZB/Bayg4nzPlRQk2LMEaNzvDBgPJHueHu/x9E+nMzdgOfDV4JeBPhcLXs2tKAIgGitARvTGtBwe85o1GovSyS2GRP4x67p3co0iod70cyxduISwXgCNyZSTrxqOftRMu7");
		vc.addCertificateTokenForVerification(certificateToken);

		vc.validate();

		Set<CertificateToken> processedCertificates = vc.getProcessedCertificates();
		assertEquals(4, processedCertificates.size()); // cert chain only going up, if it went sideways it could get 60+ certs
		assertNotNull(getRootCertificate(certificateToken, processedCertificates)); // given that the root certificate has an issuer, it's not possible to
																					// determine the trust anchor
	}

	public CertificateToken getRootCertificate(CertificateToken token, Set<CertificateToken> allCerts) {
		Set<CertificateToken> processed = new HashSet<>();
		while (token.getPublicKeyOfTheSigner() != null) {
			if (processed.contains(token)) {
				break;
			}
			CertificateToken issuer = getCert(token.getPublicKeyOfTheSigner(), allCerts);
			assertNotNull(issuer);

			if (issuer.isSelfSigned()) {
				return issuer;
			}
			processed.add(token);
			token = issuer;
		}
		return null;
	}

	private CertificateToken getCert(PublicKey pubKey, Set<CertificateToken> allCerts) {
		for (CertificateToken token : allCerts) {
			if (token.getPublicKey().equals(pubKey)) {
				return token;
			}
		}
		return null;
	}

	@Test
	void successfulAiaRequestTest() {
		CertificateToken certToken = DSSUtils.loadCertificate(new File("src/test/resources/CZ.cer"));

		Map<String, byte[]> dataMap = new HashMap<>();
		dataMap.put("http://q.ica.cz/ca_nbusr09.p7c", DSSUtils.toByteArray(new File("src/test/resources/CZ_CA.cer")));

		DataLoader dataLoader = new MemoryDataLoader(dataMap);
		MockAIASource aiaSource = new MockAIASource(dataLoader);

		CommonCertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		certificateVerifier.setAIASource(aiaSource);

		SignatureValidationContext svc = new SignatureValidationContext();
		svc.initialize(certificateVerifier);
		svc.addCertificateTokenForVerification(certToken);

		assertEquals(0, aiaSource.requestCounter);

		svc.validate();
		assertEquals(1, aiaSource.requestCounter);
		assertNotNull(certToken.getPublicKeyOfTheSigner());

		svc.validate();
		assertEquals(1, aiaSource.requestCounter);
		assertNotNull(certToken.getPublicKeyOfTheSigner());
	}

	@Test
	void unsuccessfulAiaRequestTest() {
		CertificateToken certToken = DSSUtils.loadCertificate(new File("src/test/resources/CZ.cer"));

		DataLoader dataLoader = new IgnoreDataLoader();
		MockAIASource aiaSource = new MockAIASource(dataLoader);

		CommonCertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		certificateVerifier.setAIASource(aiaSource);

		SignatureValidationContext svc = new SignatureValidationContext();
		svc.initialize(certificateVerifier);
		svc.addCertificateTokenForVerification(certToken);

		assertEquals(0, aiaSource.requestCounter);

		svc.validate();
		assertEquals(1, aiaSource.requestCounter);
		assertNull(certToken.getPublicKeyOfTheSigner());

		svc.validate();
		assertEquals(1, aiaSource.requestCounter);
		assertNull(certToken.getPublicKeyOfTheSigner());
	}

	@Test
	void checkAllRequiredRevocationDataPresentTest() {
		String crlB64 = "MIIBbTBXMA0GCSqGSIb3DQEBBQUAMCgxCzAJBgNVBAYTAkJFMRkwFwYDVQQDExBCZWxnaXVtIFJvb3QgQ0EyFw0xNDA3MDExMTAwMDBaFw0xNTAxMzExMTAwMDBaMA0GCSqGSIb3DQEBBQUAA4IBAQClCqf+EHb/ZafCIrRXdEmIOrHV0fFYfIbLEWUhMLIDBdNgcDeKjUOB6dc3WnxfyuE4RzndBbZA1dlDv7wEX8sxaGzAdER166uDS/CF7wwVz8voDq+ju5xopN01Vy7FNcCA43IpnZal9HPIQfb2EyrfNu5hQal7WiKE7q8PSch1vBlB9h8NbyIfnyPiHZ7A0B6MPJBqSCFwgGm+YZB/4DQssOVui0+kBT19uUBjTG0QEe7dLxZTBEgBowq5axv93QBXe0j+xOXZ97tlU2iJ51bsLY3E134ziMV6hKPsBw6ARMq/BF64P6axLIUOqdCRaYoMu2ekfYSoFuaM3l2o79aw";

		String certToValidateB64 = "MIIEBTCCAu2gAwIBAgILBAAAAAABQeUqkm4wDQYJKoZIhvcNAQEFBQAwKDELMAkGA1UEBhMCQkUxGTAXBgNVBAMTEEJlbGdpdW0gUm9vdCBDQTIwHhcNMTMxMDIzMTEwMDAwWhcNMTkwMTIzMTEwMDAwWjBjMQswCQYDVQQGEwJCRTENMAsGA1UEBRMEMjAxNDEjMCEGA1UEChMaQmVsZ2l1bSBGZWRlcmFsIEdvdmVybm1lbnQxIDAeBgNVBAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuurzcUZ9xj0Hxj8pzLPSdodxbl9hTzmvVFjVwkPlO/CKItuMv5jdX78vkJyxDoCIzlaydC8iX6LKVvbKWS8DHU4Q9vUg9jlyPrG3pM8/7uMKEiVJlo1Q7G/j3ycVIfKW5JgLEUkkA7prtjxumaUaNtoSoLXVbHU+4qIVLuBOq7dYwZN0oftYM6cUEslqDi8OSAZVyPYvUNI7klcQRh28duuMyUXhOzu4neBz49uSA5c3nAIHJxJH+zsIEIZ/rv2+oiFsN3NRy8mu8sHwOR1bf81SP73C6Gsgx0cjb4JaEvAdEXayOx5YjIkp8p9rF0sMHbimYy6Xhg6uAzObjFrQtwIDAQABo4H0MIHxMA4GA1UdDwEB/wQEAwIGwDAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCDBDBgNVHSAEPDA6MDgGBmA4CQEBBTAuMCwGCCsGAQUFBwIBFiBodHRwOi8vcmVwb3NpdG9yeS5wa2kuYmVsZ2l1bS5iZTAdBgNVHQ4EFgQUhy+xl8l/bUtfYofrFHxPI0hLRJIwNwYDVR0fBDAwLjAsoCqgKIYmaHR0cDovL2NybC5wa2kuYmVsZ2l1bS5iZS9iZWxnaXVtMi5jcmwwCQYDVR0TBAIwADAfBgNVHSMEGDAWgBSFiuv0xbu+DlkDlN7WgAEV4xCcOTANBgkqhkiG9w0BAQUFAAOCAQEAKtng/BMJwJ4moDPdh0wJbMcDupg7Cr3PboLqNiVtJHtojtgya5+LDfIpDaBt054es/OKV3fNd40LU1eNBj0flU0SNgxwRqqWwBjdpBj9XCZsLsTlCjLDG7HJq6toyAfXYjHBj3KldUQS2g4wf3nxeQgDbLTs28MhpJWN9FCk2DJ63aPEbAZ/HA20NPAb86KM/LhO2AlkDwhpP510ih1dBWjiwNRrkrmxInW+PCQmBGR60rqRs5f8naosyR8URDz/wHiQ4Arn/HrX/KVZ2HMD8pt1IZY+5LuIuA2fn0hNCQyrGZoa3HNqIIP5zfavw0Tp+jDKLNNSsi5L8CP128lkug==";
		String caCertB64 = "MIIDjjCCAnagAwIBAgIIKv++n6Lw6YcwDQYJKoZIhvcNAQEFBQAwKDELMAkGA1UEBhMCQkUxGTAXBgNVBAMTEEJlbGdpdW0gUm9vdCBDQTIwHhcNMDcxMDA0MTAwMDAwWhcNMjExMjE1MDgwMDAwWjAoMQswCQYDVQQGEwJCRTEZMBcGA1UEAxMQQmVsZ2l1bSBSb290IENBMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMZzQh6S/3UPi790hqc/7bIYLS2X+an7mEoj39WN4IzGMhwWLQdC1i22bi+n9fzGhYJdld61IgDMqFNAn68KNaJ6x+HK92AQZw6nUHMXU5WfIp8MXW+2QbyM69odRr2nlL/zGsvU+40OHjPIltfsjFPekx40HopQcSZYtF3CiInaYNKJIT/e1wEYNm7hLHADBGXvmAYrXR5i3FVr/mZkIV/4L+HXmymvb82fqgxG0YjFnaKVn6w/Fa7yYd/vw2uaItgscf1YHewApDgglVrH1Tdjuk+bqv5WRi5j2Qsj1Yr6tSPwiRuhFA0m2kHwOI8w7QUmecFLTqG4flVSOmlGhHUCAwEAAaOBuzCBuDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBCBgNVHSAEOzA5MDcGBWA4CQEBMC4wLAYIKwYBBQUHAgEWIGh0dHA6Ly9yZXBvc2l0b3J5LmVpZC5iZWxnaXVtLmJlMB0GA1UdDgQWBBSFiuv0xbu+DlkDlN7WgAEV4xCcOTARBglghkgBhvhCAQEEBAMCAAcwHwYDVR0jBBgwFoAUhYrr9MW7vg5ZA5Te1oABFeMQnDkwDQYJKoZIhvcNAQEFBQADggEBAFHYhd27V2/MoGy1oyCcUwnzSgEMdL8rs5qauhjyC4isHLMzr87lEwEnkoRYmhC598wUkmt0FoqW6FHvv/pKJaeJtmMrXZRY0c8RcrYeuTlBFk0pvDVTC9rejg7NqZV3JcqUWumyaa7YwBO+mPyWnIR/VRPmPIfjvCCkpDZoa01gZhz5v6yAlGYuuUGK02XThIAC71AdXkbc98m6tTR8KvPG2F9fVJ3bTc0R5/0UAoNmXsimABKgX77OFP67H6dh96tK8QYUn8pJQsKpvO2FsauBQeYNxUJpU4c5nUwfAA4+Bw11V0SoU7Q2dmSZ3G7rPUZuFF1eR1ONeE3gJ7uOhXY=";

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addCertificateTokenForVerification(DSSUtils.loadCertificateFromBase64EncodedString(certToValidateB64));
		validationContext.addCertificateTokenForVerification(DSSUtils.loadCertificateFromBase64EncodedString(caCertB64));
		validationContext.validate();

		// alerts not handled in check calls (see {@code eu.europa.esig.dss.spi.validation.SignatureValidationAlerter for alerts handling)
		certificateVerifier.setAlertOnMissingRevocationData(new ExceptionOnStatusAlert());
		assertFalse(validationContext.checkAllRequiredRevocationDataPresent());

		certificateVerifier.setAlertOnMissingRevocationData(new SilentOnStatusAlert());
		assertFalse(validationContext.checkAllRequiredRevocationDataPresent());

		certificateVerifier.setAlertOnMissingRevocationData(null);
		assertFalse(validationContext.checkAllRequiredRevocationDataPresent());

		validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addCertificateTokenForVerification(DSSUtils.loadCertificateFromBase64EncodedString(certToValidateB64));
		validationContext.addCertificateTokenForVerification(DSSUtils.loadCertificateFromBase64EncodedString(caCertB64));

		OfflineCRLSource crlSource = new ExternalResourcesCRLSource(new InMemoryDocument(Utils.fromBase64(crlB64)));
		validationContext.addDocumentCRLSource(crlSource);
		validationContext.validate();

		certificateVerifier.setAlertOnMissingRevocationData(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkAllRequiredRevocationDataPresent());

		certificateVerifier.setAlertOnMissingRevocationData(new SilentOnStatusAlert());
		assertTrue(validationContext.checkAllRequiredRevocationDataPresent());

		certificateVerifier.setAlertOnMissingRevocationData(null);
		assertTrue(validationContext.checkAllRequiredRevocationDataPresent());
	}

	@Test
	void checkAllPOECoveredByRevocationDataTest() throws Exception {
		String tstB64 = "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";
		String crlB64Old = "MIICXTCBxgIBATANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUXDTI0MTEyMTE1NDY0MloXDTI1MDUyMTE1NDY0MlowRTAhAgIB9xcNMjQwMzExMDkzMDEyWjAMMAoGA1UdFQQDCgEBMCACAQYXDTI0MDMxMTA5MzAxMlowDDAKBgNVHRUEAwoBATANBgkqhkiG9w0BAQsFAAOCAYEAdeWMbnGK9mudE8bVjdRI1QJDInJenSyuYsikazZN8IEv8Ll3q/AMTCl+cRRBR6n6fjYh4LaJUCGF4l/ikDKyNgf8AMS+xqdiV2ZzYlWFQndXK1QYAdm/LC5O02VPGa6mk6Jox2epklzd3NVmmms/gBQ4bU2Q3OHELP1BrevziWQnqhyxnWmA5TXFknQtvQVDKdtHCGfI1qdMVclRsWDaFbSBwvcnE5WgKyDPX6NFP5sTXxCCBb/kiu6EX9OlNOAw2J/YkO1IjkZUZfnmKIgVMuSsbXLZ1oAdbtMl8PG/pYWHE6wKBj7S9K5nQIFIE/HYr5s6/4pqcQpTytyWzvWDFITKR94z+03fE5IRniauXKZXKHScfJ+KgQuioRkT3Y/H/1ifgPwaCR60X+DhDplO4B1WC6qlu4YiZTpkQJY35qbphl4k1WFhtDma/tqL8iC9tUK3cOXqt+8mL88+9faMhAaVPczCIrqsn+Id4fA0WNhci4DADz8q1YKJyxAhliRd";
		String crlB64New = "MIICXTCBxgIBATANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUXDTI0MTIxMzEwMDEwNVoXDTI1MDYxMzEwMDEwNVowRTAhAgIB9xcNMjQwMzExMDkzMDEyWjAMMAoGA1UdFQQDCgEBMCACAQYXDTI0MDMxMTA5MzAxMlowDDAKBgNVHRUEAwoBATANBgkqhkiG9w0BAQsFAAOCAYEASa/Z4GZIcinBhyK4BKgAwL1pH4X0r0ntjJLkbgdFStjeLx95qOLch3fHaN4my3bRhu/EU9NL/0CwiWNwIYllGT5Siz2KAevDbbLj+EqORot9TowjHKbvIsYmQY7FgRDxbWwYju/qHR0hEnQAW4X+CWak2vrjF3h9PMJIRKtkXi8AW9frlu1pc+M0PDALS6G+o2CjE5LBt2Wbw+udrZIfYGZKd7g7xz0X+nETAqGxgA8ocHIsYz1g1noFm3SSqThwsaB2xbk6QSYSRtffMu/rA2bLKfb74yIZy5gid228BCBv+XXrDZcQtVYCiZoEFew16PaE0dd3+a4qR3GVrSgtAsP/dSbxQrTJlwt7zrW/2TNIgxJ7ngMJVneIgOXqh9TCOzt2x5UxRzeZBDz9IS3S9SIdJYCTzXJHhPYxYSYpKG5lSat+gae4syoPLkyzGPv2YygTDAQXWNy5XSwSPjHsoNhS3YFGBcXaSoY0ef7cJpONJAP+H3L9Lynt5p8imUwh";

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addTimestampTokenForVerification(new TimestampToken(Utils.fromBase64(tstB64), TimestampType.CONTENT_TIMESTAMP));

		OfflineCRLSource crlSource = new ExternalResourcesCRLSource(new InMemoryDocument(Utils.fromBase64(crlB64Old)));
		validationContext.addDocumentCRLSource(crlSource);
		validationContext.validate();

		certificateVerifier.setAlertOnUncoveredPOE(new ExceptionOnStatusAlert());
		assertFalse(validationContext.checkAllPOECoveredByRevocationData());

		certificateVerifier.setAlertOnUncoveredPOE(new SilentOnStatusAlert());
		assertFalse(validationContext.checkAllPOECoveredByRevocationData());

		certificateVerifier.setAlertOnUncoveredPOE(null);
		assertFalse(validationContext.checkAllPOECoveredByRevocationData());

		validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addTimestampTokenForVerification(new TimestampToken(Utils.fromBase64(tstB64), TimestampType.CONTENT_TIMESTAMP));

		crlSource = new ExternalResourcesCRLSource(new InMemoryDocument(Utils.fromBase64(crlB64New)));
		validationContext.addDocumentCRLSource(crlSource);
		validationContext.validate();

		certificateVerifier.setAlertOnUncoveredPOE(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkAllPOECoveredByRevocationData());

		certificateVerifier.setAlertOnUncoveredPOE(new SilentOnStatusAlert());
		assertTrue(validationContext.checkAllPOECoveredByRevocationData());

		certificateVerifier.setAlertOnUncoveredPOE(null);
		assertTrue(validationContext.checkAllPOECoveredByRevocationData());
	}

	@Test
	void checkAllTimestampsValidTest() throws Exception {
		String tstB64 = "MIIMpwYJKoZIhvcNAQcCoIIMmDCCDJQCAQMxDTALBglghkgBZQMEAgEwYgYLKoZIhvcNAQkQAQSgUwRRME8CAQEGBCoDBAUwITAJBgUrDgMCGgUABBR7UCw6H0jIYJriEs37Y53uOWc/XgIQE38z3BWoxzq80UKv0PlLGxgPMjAyNDEyMTMwOTU1NDBaoIIJUjCCBFcwggK/oAMCAQICAQEwDQYJKoZIhvcNAQENBQAwTTEQMA4GA1UEAwwHcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMB4XDTIzMDQxMTA5MzAxMloXDTI1MDQxMTA5MzAxMlowTTEQMA4GA1UEAwwHcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAoQJeYNcFirNyH9ZXm1HhVVsTTutLmDLVFetEmrdrIRLEZp5hw9XFk8itW5REKcShW48ajSKFWm5gczE96XUvKGgLkFwsec2lRlPNzV7gBC4NVdxm45mxI9bDHhNXFRHHm9RiSYAsNrND+vvqKWpSRwvvJaIoUVItoWROjaBB2D3I6gUl1nzs7IrggNGhKGp0cGe1Bv7qnWWEoQIefSbmp+en4cu/HLwUJ9DdJ44o/HZPtHuyRX/iwUTkS0wBkpcnqVcejEk/GaEOdR7rGZ33RvyztQ1qKrHUtusvj2rIjXnucTWtRThFYloeVfQB/JBZhNwztEzhuuNLq3uZwOwZEP9fnhdQakbmmavBxEWW5uzlVYjtOoEyUacbRrmYoFLVEz3NNzp9/HNMUzDuBob7IJ0x7Nk+wASWNISpKMoLVQcIR9iVHsXY36qji+WGGkdJB15kl6vztmqsD0W3g/A8ziLAdlImHl+N++Ilxk4+wqkRx9PoCuYOc+c/z/NAG7tbAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUU8aS3kr1yz3uA3ckv3LlXv42yY0wDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0FAAOCAYEAbjM3a+E1KOins3nbNX5nrKcbVsZFE1kM0pRQpxt3KYOUy2/9mjsf9v/aIi+PwkVv7CEuY0QKnePunDfqO2LmGBD1TJyzNiy8smY0e8R+uDzM5pSDr8aiG16JvItkmPuxhxpwdNKQ5CQgx1X2cC7IQhjqpeEID21tYc+UPNQfeQSWwtwFch+sFpeSVCfkl9elBJvVhNhKMqr+CTaL92a1PbWI1N7KsLuAsxPdkYgSGLmmfO+aYn3plPexGZ1hGcTnhdY4BzeZZVjHi7emcFv5VlhR2k488tB4oo5gGvfOBuSIq98jIMk6ng54mWBp92I6zOr0Ey9PwevNgV+qQA1eLyyK8HMlh1Fah1Dl3b1YqTpChU6wE4GNqFuVUrBCaxmnw6m+jF30o4r+6Lk5WPHhLJXFdeE7eyng60ozo8xX6+cUhfgJmsvZVGgxVkRngLzHidbantXcKfuxvFIeNG7ztinXbpJQ+S0+u9f6UWzlq+VyLcruKzHy4SDOA7hxp6nJMIIE8zCCA1ugAwIBAgICAfQwDQYJKoZIhvcNAQENBQAwTTEQMA4GA1UEAwwHcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMB4XDTIzMDUxMTA5MzAxMloXDTI1MDMxMTA5MzAxMlowTjERMA8GA1UEAwwIZ29vZC10c2ExGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAI90c+5Vqoe1InmTeTT7NrK+7x+mDMsQ1BUjF0gFH/8i+uCKO1+H+btNG1MGqyyiPKNHMQNZNCXtZSPID06mlGXDiydP/E2iE96HdzEbBgNwwQBwOYjVH7Y2D7b/F0lEYZb41a2EyXAY5wHhRBI7AA/DNonmIt90NuVMgMEwGfpFKCLuyhkiOj0ukhaqyJoCEgNI75+6amHCAgerpnVmYfAE3XouJ6xA3egm2t469pvx5IjjaaT+VgLlmcHC/ynmvX+2XtOYFNOuCioapa9WoV3D0QYTLRbhpTPg4vgIaaPgLPsHZo+jx8Z5LYi4yeXmCouhj0wSb7wc6HcQNurBl/cKBey7olqfj+nAHWYl4mMePnE1zUHLUaFHoxFsOj1hj97LYeE5u2HI1ZoHAOyrfD4eMgizpg6mHnhB++lr4SZXZe9WPAwT6C48rKXa55qynmOMBDNmx4UwE80fx+jNbnZEU2edF4fBcyjzusAvK6WcU6evWnboe4h9VCRaU3ldcwIDAQABo4HbMIHYMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCDBBBgNVHR8EOjA4MDagNKAyhjBodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcmwvcm9vdC1jYS5jcmwwTAYIKwYBBQUHAQEEQDA+MDwGCCsGAQUFBzAChjBodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcnQvcm9vdC1jYS5jcnQwHQYDVR0OBBYEFJywlyojxLwGuQ4SvBZbAqt76HO4MA0GCSqGSIb3DQEBDQUAA4IBgQA2Hh9nCuKoIiaNp8cOiehNoPhhA1U6z+28q23Yi8oPMqyGyf8NQgNaohN6v2DrYpRxErZJLPflmHNsgGcrl44SRatar78HCcxnbsB8aBEzFkkMlxcK1YcUakPYYLsA9xRxhrYMaXjbJM/FR4XJaAj1uLaf6z6OhDzdP9xvqgBCOYGeyXlp6/D2LEYTQUALp8skKrKmenGheH9/6JjVjHl4+FPHKTfymdoxAymgSqvFycnpnLUSM9M3myFp9BB0qHMMJIwM1o2D7wUV/r2fR01LTaVj3WDXbR1UHrDqEXaKEb7P7J3737IRuTw8qeAZsMrxCgYYbygg/N6mjRAg0jB2/mnqXszUI0BA1dboyuwzuadPEJcweG4b0rC5njOhH5Eq9Tfj2ixOS7H6lk8jIoHWQnQRaZijQJRMx3LKLqKKEFRtF6C7lafRGUnrWSU2/c6rcKI5Jv2Mo1OSdg5dQMotUx8NGYIFHsTVuZzMPM5l7SqZ2tpUQaWaolzzSZf3ZNoxggLEMIICwAIBATBTME0xEDAOBgNVBAMMB3Jvb3QtY2ExGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVQICAfQwCwYJYIZIAWUDBAIBoIHFMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAcBgkqhkiG9w0BCQUxDxcNMjQxMjEzMDk1NTQwWjArBgkqhkiG9w0BCTQxHjAcMAsGCWCGSAFlAwQCAaENBgkqhkiG9w0BAQsFADArBgsqhkiG9w0BCRACDDEcMBowGDAWBBThsYvdgilDemkK67A+ldZDqmCf4DAvBgkqhkiG9w0BCQQxIgQg8SqK3zZXp8JYC1FmeAc5qk0+I9sVkqYcQGSNueLdOmMwDQYJKoZIhvcNAQELBQAEggGAR6gb5zXkqrTJXLHKiW4w2zFp4s8FAQSgztph+Hk98D9USLLw3gK6MVD3jzbG8h1MuBBBGrpNDQF7HZGDPPnC0NXrG7KiIT34ZYD4TEmu/C5vIfXmvlfA45/oXD3B0MJtn/XIqtCWhAA5+kxzcTQDtq7qocNmGrqoYiWdhsOORSMt0n4LzXrIF3TJEux1Oc2nRi3x9mr25x8EiRaZZ/vebbks044sZ8x5loidX0Dzlde4qzs2/eCoBrDywp4OqYS4qkzaIdUcOFkp09iaTdZT3XfEzFGcDCR5wsBdMWO1j8jIDUVneWrQWwcnBaN9Pnm+k2u3jb+0YGoOe9hEZkq8x+cyWA3Yc0kKSKvddXgOIJcJ4IRzllWeL8RJ3OHrRzrSJ8N0XzwcBMD3BV2m8AH7r2eCVbbAZYt48fHfhYXkDUxEE4LjBBulU8itv7Q708Md9wB3am56Q9z1zO/fsWFBbTCWdUjlJZqCiHX8HWJEFkh8Xff9n1hf298p4eE+ihg3";

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		TimestampToken timestampToken = new TimestampToken(Utils.fromBase64(tstB64), TimestampType.CONTENT_TIMESTAMP);
		validationContext.addTimestampTokenForVerification(timestampToken);

		validationContext.validate();

		certificateVerifier.setAlertOnInvalidTimestamp(new ExceptionOnStatusAlert());
		assertFalse(validationContext.checkAllTimestampsValid());

		certificateVerifier.setAlertOnInvalidTimestamp(new SilentOnStatusAlert());
		assertFalse(validationContext.checkAllTimestampsValid());

		certificateVerifier.setAlertOnInvalidTimestamp(null);
		assertFalse(validationContext.checkAllTimestampsValid());

		validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		timestampToken.matchData(new InMemoryDocument("Hello world".getBytes()));
		validationContext.addTimestampTokenForVerification(timestampToken);

		validationContext.validate();

		certificateVerifier.setAlertOnInvalidTimestamp(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkAllTimestampsValid());

		certificateVerifier.setAlertOnInvalidTimestamp(new SilentOnStatusAlert());
		assertTrue(validationContext.checkAllTimestampsValid());

		certificateVerifier.setAlertOnInvalidTimestamp(null);
		assertTrue(validationContext.checkAllTimestampsValid());
	}

	@Test
	void checkCertificateNotRevokedTest() {
		String caCertB64 = "MIIE6jCCA1KgAwIBAgIBBDANBgkqhkiG9w0BAQ0FADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQC1PUSrajqIL0II//nqAcWTtRUSf8sty531NCHgna+ZuZsXO0DR0vEHsZyMBvASOSZPJQHJ0mmWBHc5TcWxRlAFBwOx4J7X9QXdkaNGwzJxsHCG3VKcCY3MroaJKCJMJmlIWKBhBK4cTFeAhkJxoBZXPl4At1MIOPgVU8mTzM8BCT1A6EPz2P3FqduP4tZ5m3yBb5ARailHqKd1Pt4nvhw8ojTZPrVXfpLYzb2Ca/WqpF1acsLTXwSvXedN5H3AwFLIw8KNNf+sv+y7Izrd6+d6BEysaNX2pe2PH7h++U2cTuXJwuOkbtQ9QftSX0vj71hzGkF7eUeSIya4Ych3/KQDds1wjVusfwvoQFjdBK1Kjr/w131hLREaNXR2jmT7dP2+/AYOFe3otGqsZ0vVSpJC/FBSQFg3uslg+r3cllfHVVqnC0uJUz3Db37hhAwTyflqqh00eVUqOZmKgwLtRKEJdHLW35A8v7X2xrNwJTM9CmtJgIBUidOIIcM08KnqJgkCAwEAAaOB1DCB0TAOBgNVHQ8BAf8EBAMCAQYwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2Rzcy5ub3dpbmEubHUvcGtpLWZhY3RvcnkvY3JsL3Jvb3QtY2EuY3JsMEwGCCsGAQUFBwEBBEAwPjA8BggrBgEFBQcwAoYwaHR0cDovL2Rzcy5ub3dpbmEubHUvcGtpLWZhY3RvcnkvY3J0L3Jvb3QtY2EuY3J0MB0GA1UdDgQWBBR3M19EZViYTkOnl9i3gL1IC+3ocDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBDQUAA4IBgQBlQ/qHtmhbFn2glu5sHffa6gXTHxshHgcZXdXrjfbtbOlib/NcdJokX0ugqeE9PrOKf1bvWOZgxFoByF4FD/QTyHnMtcAMJnuEX6dlfptVRrAhto+X79OHTvsSEDaFAC6IR1TAFyXtMLDBJptsg2EDenDK0Mc+w6Jz1AzclHHkFJGSZx0hQ76YyjEDodYohe7TIFN7n/2sOtIOEbPmWAtxNuO8AYf4AU7szYslVP0W12Y7MMwvqA66u/TbWh0RsJv+hGl1Nch74uZ6St5S4/iazM/iWjq98Wll8s8cmw4GihxRp/+rXKhu6rDgxn4LRQ7OlGwqTepwpk86Ezb/7H12B4rg5m9RH5pulhfkrX3N+phYvXPudyGl/g6kgbjpiAiyPVWmIKYRyVAK58H+siySX+zEbcj9eZbcP/IQi8g4qDr+d3fqy3Fpn81DOSxY45UvnudwFEGd4I/A3JOfho2hnO0DPdLX+wr/VVXXZQ9SZcqsCpnJP3TwPnZ041pXSiY=";

		String goodCertB64 = "MIIE1DCCAzygAwIBAgIBCjANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBPMRIwEAYDVQQDDAlnb29kLXVzZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBALX1sy8jRXKTIsDdv9PxSSRK8WUl1f4IUfK7eSyukPyBFOxWw4CmrRKIkT6uxyu4m5QnV5pH205Pg1Sqt02QtGYvuOrracQqcVhysiwSAssP8TTiVAPYRY7F8r+y6/ejxkNNYPWS5n71Kw2X+2iPlqqjUXvSgpt5tI42wuurNs7HusbTvkuNwyJ1nX8RLYy/oZroGmgUJ9mS3PpgOjqgT4Szgv5YWZgak4qvDlgXsrYEJJoSEYvDaz5zWEVmyMeBAWXzqD2EwuKso81l/2F0F3rB9R2tIt/Q6cZp0jvCvk49PYnpnEmNyqZ0YywXxWjejqr5cMbtPaNEjCc4gkK68n3EGFsTEoRvxWu0jbiy5RiXjoCJMXsZ2c//yPM0BKM7ggwB46WM6V0izEUzyODYB1VZuuFmcVAxqfvVCHUD3nDJDJcDw3FFK5o39lSVcMibZiI9OkQ0mS2etxSDqPer3mnw1SqzJI+07P0SLaY342T1O9Uxgj2XH3V5ev8jLDcfDwIDAQABo4G8MIG5MA4GA1UdDwEB/wQEAwIGQDCBhwYIKwYBBQUHAQEEezB5MDkGCCsGAQUFBzABhi1odHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9vY3NwL2dvb2QtY2EwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9nb29kLWNhLmNydDAdBgNVHQ4EFgQUPb1pbH/SdKVwt/wUoHujt7QG5CcwDQYJKoZIhvcNAQELBQADggGBAB1lKWCyViP6ucFOrJiV+f5AO39i4gigbGbRccY0iGl4jPFGXHb6VcRYYYrUOAmUttS6NinPkRmjs7qaDaa7MzxZkj9DQ/2S9OcVPJS2J9R9npGrWO4zVG4rXVTVqV3o2/A6g/zSL6N6K3ne9P4s0Oz8NZQUR/CYVUUXAub4j/HeYHC+6iIegpdFKyhp+bGmnjG6m5iVEb68u3dN6fcSzfg+vPwdTNumFRTtl9mj+R/pFp8+hxZIPYmWab4ADuHPQt3u/DmK8EiqxprTG+EAVqMbCyuVwFdNMLPyXczP1jkFKqD+wFy7bdgIWwQGHVPscP2h1RzCu0Gz/RVtEestaSN3njPtcXoVg9fzIu3zaN991WBQBDt+7a6tzycb7saNR4YfaleHXe55KvXvS22uLNUL4nWAjWPtHla6eeUYaEkXDoLg5Z7kJuBp6YOQ9cvcYpHJ9XdTQFNN7hOGjKmIb8Twm/Imlmvw4CxNm3uDFr6BBJSeYgMKr0mYyrDw5wyl5g==";
		String goodCertOcspB64 = "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";

		String revokedCertB64 = "MIIE1zCCAz+gAwIBAgIBDDANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBSMRUwEwYDVQQDDAxyZXZva2VkLXVzZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAMX72roFalEtc7K8CnGJXU1TkbVtaNApYNO8S4Gr7QXuDOYtWH8dy5cdoUtYpluYPHQfhTrUhuNylpwiBTsckjmj133RtQckN8yNsOsaLYGw/X0UbclxsIXo2DGxpoZznVv/q5GbcHV1L2BejTVLKIJacu4Nc/ojtGoEb+Rz7BbD1dYQYNLVZf9XNtI/3BiLEo6R2oP5nPgsTVZ6tt8yDH2eZ/TSt+c46VP87bhzN0IGbuZmPmwjrI/2WVb4JwJqNtFueGBJoYSfxHZLzJZF3JjoxG4mDLtZZVWMILL3CrYg1sUczJVSbQ+mgTI2NBe4lFdkqRwE35H3lEPJeqOSbJQMgcBgcyhLVUpSCYims5w4KmvpfSoySU+Y23AG7HjawA/haa9M0BeK/0rgoOLU9oec4cfpSshujF5ERK8m5xzt1RQ90428SmmK2rcsS2kTdQnTDtjcFgsrgRpBGyBDaO1wFyaAkemVyX+a2YE/3irodh/zJ5U1DkLvzvnp2G3TfQIDAQABo4G8MIG5MA4GA1UdDwEB/wQEAwIGQDCBhwYIKwYBBQUHAQEEezB5MDkGCCsGAQUFBzABhi1odHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9vY3NwL2dvb2QtY2EwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9nb29kLWNhLmNydDAdBgNVHQ4EFgQUiAOsGtq3rrNrYVloJR1iTmvagdwwDQYJKoZIhvcNAQELBQADggGBAE/xlcf18nby1Bj/9mMMWRc5PiAmlwb28KAQ2CQ+J6oZz8R48LWgRJKnYafq6lVmcjNWmH11BgUh0fxkPVbPdp2Yc2XRj6siIc/ysf4gusG1Y430rnFNLzoQxi0IZkkfPEkc1cSZ1bk3CbaL/UcGB2rJkd1q+K5BecCAXiBAYTV1GWuYv2SoGcJA7yVOv0xec4eCYDmu4VSprGpKL+pLGZ4cvUriO8K3i0lPckBICQzGYnyHFOegobx55eY3Ve8FODz4NPbgqjRpQXaddEr3IxL3pfb0QxqSnOsCiJnTY14VdB1vQwYOKREqIpUi9lN9JcWQ55duAL1yqL+DaLtPw3KhZ0o5X+nBjwiyjozq5FW3nHEj2zWJ+hnuebyFTdSOhXD0QrILxhoFaLVbZfN7eWbvJnBK21Kgsm2v95AsCvzZ1SGzZDK7Gi+R4ZdCs5rdl9KUwAKNuwgPMdn9JssDvCXE5JFwQ/sXLjkuQ8sloRpQFHvrALVgJEQhzWTTHkCNNg==";
		String revokedCertOcspB64 = "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";

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		CertificateToken caCert = DSSUtils.loadCertificateFromBase64EncodedString(caCertB64);
		validationContext.addCertificateTokenForVerification(caCert);
		CertificateToken goodCert = DSSUtils.loadCertificateFromBase64EncodedString(goodCertB64);
		validationContext.addCertificateTokenForVerification(goodCert);
		CertificateToken revokedCert = DSSUtils.loadCertificateFromBase64EncodedString(revokedCertB64);
		validationContext.addCertificateTokenForVerification(revokedCert);

		OfflineOCSPSource ocspSource = new ExternalResourcesOCSPSource(
				new InMemoryDocument(Utils.fromBase64(goodCertOcspB64)),
				new InMemoryDocument(Utils.fromBase64(revokedCertOcspB64)));
		validationContext.addDocumentOCSPSource(ocspSource);

		validationContext.validate();

		certificateVerifier.setAlertOnRevokedCertificate(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkCertificateNotRevoked(goodCert));
		assertFalse(validationContext.checkCertificateNotRevoked(revokedCert));

		certificateVerifier.setAlertOnRevokedCertificate(new SilentOnStatusAlert());
		assertTrue(validationContext.checkCertificateNotRevoked(goodCert));
		assertFalse(validationContext.checkCertificateNotRevoked(revokedCert));

		certificateVerifier.setAlertOnRevokedCertificate(null);
		assertTrue(validationContext.checkCertificateNotRevoked(goodCert));
		assertFalse(validationContext.checkCertificateNotRevoked(revokedCert));
	}

	@Test
	void checkAllSignatureCertificatesNotRevokedTest() {
		String caCertB64 = "MIIE6jCCA1KgAwIBAgIBBDANBgkqhkiG9w0BAQ0FADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQC1PUSrajqIL0II//nqAcWTtRUSf8sty531NCHgna+ZuZsXO0DR0vEHsZyMBvASOSZPJQHJ0mmWBHc5TcWxRlAFBwOx4J7X9QXdkaNGwzJxsHCG3VKcCY3MroaJKCJMJmlIWKBhBK4cTFeAhkJxoBZXPl4At1MIOPgVU8mTzM8BCT1A6EPz2P3FqduP4tZ5m3yBb5ARailHqKd1Pt4nvhw8ojTZPrVXfpLYzb2Ca/WqpF1acsLTXwSvXedN5H3AwFLIw8KNNf+sv+y7Izrd6+d6BEysaNX2pe2PH7h++U2cTuXJwuOkbtQ9QftSX0vj71hzGkF7eUeSIya4Ych3/KQDds1wjVusfwvoQFjdBK1Kjr/w131hLREaNXR2jmT7dP2+/AYOFe3otGqsZ0vVSpJC/FBSQFg3uslg+r3cllfHVVqnC0uJUz3Db37hhAwTyflqqh00eVUqOZmKgwLtRKEJdHLW35A8v7X2xrNwJTM9CmtJgIBUidOIIcM08KnqJgkCAwEAAaOB1DCB0TAOBgNVHQ8BAf8EBAMCAQYwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2Rzcy5ub3dpbmEubHUvcGtpLWZhY3RvcnkvY3JsL3Jvb3QtY2EuY3JsMEwGCCsGAQUFBwEBBEAwPjA8BggrBgEFBQcwAoYwaHR0cDovL2Rzcy5ub3dpbmEubHUvcGtpLWZhY3RvcnkvY3J0L3Jvb3QtY2EuY3J0MB0GA1UdDgQWBBR3M19EZViYTkOnl9i3gL1IC+3ocDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBDQUAA4IBgQBlQ/qHtmhbFn2glu5sHffa6gXTHxshHgcZXdXrjfbtbOlib/NcdJokX0ugqeE9PrOKf1bvWOZgxFoByF4FD/QTyHnMtcAMJnuEX6dlfptVRrAhto+X79OHTvsSEDaFAC6IR1TAFyXtMLDBJptsg2EDenDK0Mc+w6Jz1AzclHHkFJGSZx0hQ76YyjEDodYohe7TIFN7n/2sOtIOEbPmWAtxNuO8AYf4AU7szYslVP0W12Y7MMwvqA66u/TbWh0RsJv+hGl1Nch74uZ6St5S4/iazM/iWjq98Wll8s8cmw4GihxRp/+rXKhu6rDgxn4LRQ7OlGwqTepwpk86Ezb/7H12B4rg5m9RH5pulhfkrX3N+phYvXPudyGl/g6kgbjpiAiyPVWmIKYRyVAK58H+siySX+zEbcj9eZbcP/IQi8g4qDr+d3fqy3Fpn81DOSxY45UvnudwFEGd4I/A3JOfho2hnO0DPdLX+wr/VVXXZQ9SZcqsCpnJP3TwPnZ041pXSiY=";

		String goodCertB64 = "MIIE1DCCAzygAwIBAgIBCjANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBPMRIwEAYDVQQDDAlnb29kLXVzZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBALX1sy8jRXKTIsDdv9PxSSRK8WUl1f4IUfK7eSyukPyBFOxWw4CmrRKIkT6uxyu4m5QnV5pH205Pg1Sqt02QtGYvuOrracQqcVhysiwSAssP8TTiVAPYRY7F8r+y6/ejxkNNYPWS5n71Kw2X+2iPlqqjUXvSgpt5tI42wuurNs7HusbTvkuNwyJ1nX8RLYy/oZroGmgUJ9mS3PpgOjqgT4Szgv5YWZgak4qvDlgXsrYEJJoSEYvDaz5zWEVmyMeBAWXzqD2EwuKso81l/2F0F3rB9R2tIt/Q6cZp0jvCvk49PYnpnEmNyqZ0YywXxWjejqr5cMbtPaNEjCc4gkK68n3EGFsTEoRvxWu0jbiy5RiXjoCJMXsZ2c//yPM0BKM7ggwB46WM6V0izEUzyODYB1VZuuFmcVAxqfvVCHUD3nDJDJcDw3FFK5o39lSVcMibZiI9OkQ0mS2etxSDqPer3mnw1SqzJI+07P0SLaY342T1O9Uxgj2XH3V5ev8jLDcfDwIDAQABo4G8MIG5MA4GA1UdDwEB/wQEAwIGQDCBhwYIKwYBBQUHAQEEezB5MDkGCCsGAQUFBzABhi1odHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9vY3NwL2dvb2QtY2EwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9nb29kLWNhLmNydDAdBgNVHQ4EFgQUPb1pbH/SdKVwt/wUoHujt7QG5CcwDQYJKoZIhvcNAQELBQADggGBAB1lKWCyViP6ucFOrJiV+f5AO39i4gigbGbRccY0iGl4jPFGXHb6VcRYYYrUOAmUttS6NinPkRmjs7qaDaa7MzxZkj9DQ/2S9OcVPJS2J9R9npGrWO4zVG4rXVTVqV3o2/A6g/zSL6N6K3ne9P4s0Oz8NZQUR/CYVUUXAub4j/HeYHC+6iIegpdFKyhp+bGmnjG6m5iVEb68u3dN6fcSzfg+vPwdTNumFRTtl9mj+R/pFp8+hxZIPYmWab4ADuHPQt3u/DmK8EiqxprTG+EAVqMbCyuVwFdNMLPyXczP1jkFKqD+wFy7bdgIWwQGHVPscP2h1RzCu0Gz/RVtEestaSN3njPtcXoVg9fzIu3zaN991WBQBDt+7a6tzycb7saNR4YfaleHXe55KvXvS22uLNUL4nWAjWPtHla6eeUYaEkXDoLg5Z7kJuBp6YOQ9cvcYpHJ9XdTQFNN7hOGjKmIb8Twm/Imlmvw4CxNm3uDFr6BBJSeYgMKr0mYyrDw5wyl5g==";
		String goodCertOcspB64 = "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";

		String revokedCertB64 = "MIIE1zCCAz+gAwIBAgIBDDANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBSMRUwEwYDVQQDDAxyZXZva2VkLXVzZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAMX72roFalEtc7K8CnGJXU1TkbVtaNApYNO8S4Gr7QXuDOYtWH8dy5cdoUtYpluYPHQfhTrUhuNylpwiBTsckjmj133RtQckN8yNsOsaLYGw/X0UbclxsIXo2DGxpoZznVv/q5GbcHV1L2BejTVLKIJacu4Nc/ojtGoEb+Rz7BbD1dYQYNLVZf9XNtI/3BiLEo6R2oP5nPgsTVZ6tt8yDH2eZ/TSt+c46VP87bhzN0IGbuZmPmwjrI/2WVb4JwJqNtFueGBJoYSfxHZLzJZF3JjoxG4mDLtZZVWMILL3CrYg1sUczJVSbQ+mgTI2NBe4lFdkqRwE35H3lEPJeqOSbJQMgcBgcyhLVUpSCYims5w4KmvpfSoySU+Y23AG7HjawA/haa9M0BeK/0rgoOLU9oec4cfpSshujF5ERK8m5xzt1RQ90428SmmK2rcsS2kTdQnTDtjcFgsrgRpBGyBDaO1wFyaAkemVyX+a2YE/3irodh/zJ5U1DkLvzvnp2G3TfQIDAQABo4G8MIG5MA4GA1UdDwEB/wQEAwIGQDCBhwYIKwYBBQUHAQEEezB5MDkGCCsGAQUFBzABhi1odHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9vY3NwL2dvb2QtY2EwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9nb29kLWNhLmNydDAdBgNVHQ4EFgQUiAOsGtq3rrNrYVloJR1iTmvagdwwDQYJKoZIhvcNAQELBQADggGBAE/xlcf18nby1Bj/9mMMWRc5PiAmlwb28KAQ2CQ+J6oZz8R48LWgRJKnYafq6lVmcjNWmH11BgUh0fxkPVbPdp2Yc2XRj6siIc/ysf4gusG1Y430rnFNLzoQxi0IZkkfPEkc1cSZ1bk3CbaL/UcGB2rJkd1q+K5BecCAXiBAYTV1GWuYv2SoGcJA7yVOv0xec4eCYDmu4VSprGpKL+pLGZ4cvUriO8K3i0lPckBICQzGYnyHFOegobx55eY3Ve8FODz4NPbgqjRpQXaddEr3IxL3pfb0QxqSnOsCiJnTY14VdB1vQwYOKREqIpUi9lN9JcWQ55duAL1yqL+DaLtPw3KhZ0o5X+nBjwiyjozq5FW3nHEj2zWJ+hnuebyFTdSOhXD0QrILxhoFaLVbZfN7eWbvJnBK21Kgsm2v95AsCvzZ1SGzZDK7Gi+R4ZdCs5rdl9KUwAKNuwgPMdn9JssDvCXE5JFwQ/sXLjkuQ8sloRpQFHvrALVgJEQhzWTTHkCNNg==";
		String revokedCertOcspB64 = "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";

		CertificateToken caCert = DSSUtils.loadCertificateFromBase64EncodedString(caCertB64);
		CertificateToken goodCert = DSSUtils.loadCertificateFromBase64EncodedString(goodCertB64);
		CertificateToken revokedCert = DSSUtils.loadCertificateFromBase64EncodedString(revokedCertB64);

		SignatureCertificateSource certificateSource = mock(SignatureCertificateSource.class);
		when(certificateSource.getCertificates()).thenReturn(Arrays.asList(caCert, goodCert));

		OfflineOCSPSource ocspSource = new ExternalResourcesOCSPSource(
				new InMemoryDocument(Utils.fromBase64(goodCertOcspB64)));

		AdvancedSignature advancedSignature = mock(AdvancedSignature.class);
		when(advancedSignature.getSigningCertificateToken()).thenReturn(goodCert);
		when(advancedSignature.getCertificateSource()).thenReturn(certificateSource);
		when(advancedSignature.getOCSPSource()).thenReturn(ocspSource);

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addSignatureForVerification(advancedSignature);

		validationContext.validate();

		certificateVerifier.setAlertOnRevokedCertificate(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkAllSignatureCertificatesNotRevoked());

		certificateVerifier.setAlertOnRevokedCertificate(new SilentOnStatusAlert());
		assertTrue(validationContext.checkAllSignatureCertificatesNotRevoked());

		certificateVerifier.setAlertOnRevokedCertificate(null);
		assertTrue(validationContext.checkAllSignatureCertificatesNotRevoked());

		certificateSource = mock(SignatureCertificateSource.class);
		when(certificateSource.getCertificates()).thenReturn(Arrays.asList(caCert, revokedCert));

		ocspSource = new ExternalResourcesOCSPSource(
				new InMemoryDocument(Utils.fromBase64(revokedCertOcspB64)));

		advancedSignature = mock(AdvancedSignature.class);
		when(advancedSignature.getSigningCertificateToken()).thenReturn(revokedCert);
		when(advancedSignature.getCertificateSource()).thenReturn(certificateSource);
		when(advancedSignature.getOCSPSource()).thenReturn(ocspSource);

		validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addSignatureForVerification(advancedSignature);

		validationContext.validate();

		certificateVerifier.setAlertOnRevokedCertificate(new ExceptionOnStatusAlert());
		assertFalse(validationContext.checkAllSignatureCertificatesNotRevoked());

		certificateVerifier.setAlertOnRevokedCertificate(new SilentOnStatusAlert());
		assertFalse(validationContext.checkAllSignatureCertificatesNotRevoked());

		certificateVerifier.setAlertOnRevokedCertificate(null);
		assertFalse(validationContext.checkAllSignatureCertificatesNotRevoked());
	}

	@Test
	void checkAllSignatureCertificateHaveFreshRevocationDataTest() throws Exception {
		String certB64 = "MIIE8zCCA1ugAwIBAgICAfQwDQYJKoZIhvcNAQENBQAwTTEQMA4GA1UEAwwHcm9vdC1jYTEZMBcGA1UECgwQTm93aW5hIFNvbHV0aW9uczERMA8GA1UECwwIUEtJLVRFU1QxCzAJBgNVBAYTAkxVMB4XDTIzMDUxMTA5MzAxMloXDTI1MDMxMTA5MzAxMlowTjERMA8GA1UEAwwIZ29vZC10c2ExGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAI90c+5Vqoe1InmTeTT7NrK+7x+mDMsQ1BUjF0gFH/8i+uCKO1+H+btNG1MGqyyiPKNHMQNZNCXtZSPID06mlGXDiydP/E2iE96HdzEbBgNwwQBwOYjVH7Y2D7b/F0lEYZb41a2EyXAY5wHhRBI7AA/DNonmIt90NuVMgMEwGfpFKCLuyhkiOj0ukhaqyJoCEgNI75+6amHCAgerpnVmYfAE3XouJ6xA3egm2t469pvx5IjjaaT+VgLlmcHC/ynmvX+2XtOYFNOuCioapa9WoV3D0QYTLRbhpTPg4vgIaaPgLPsHZo+jx8Z5LYi4yeXmCouhj0wSb7wc6HcQNurBl/cKBey7olqfj+nAHWYl4mMePnE1zUHLUaFHoxFsOj1hj97LYeE5u2HI1ZoHAOyrfD4eMgizpg6mHnhB++lr4SZXZe9WPAwT6C48rKXa55qynmOMBDNmx4UwE80fx+jNbnZEU2edF4fBcyjzusAvK6WcU6evWnboe4h9VCRaU3ldcwIDAQABo4HbMIHYMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCDBBBgNVHR8EOjA4MDagNKAyhjBodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcmwvcm9vdC1jYS5jcmwwTAYIKwYBBQUHAQEEQDA+MDwGCCsGAQUFBzAChjBodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcnQvcm9vdC1jYS5jcnQwHQYDVR0OBBYEFJywlyojxLwGuQ4SvBZbAqt76HO4MA0GCSqGSIb3DQEBDQUAA4IBgQA2Hh9nCuKoIiaNp8cOiehNoPhhA1U6z+28q23Yi8oPMqyGyf8NQgNaohN6v2DrYpRxErZJLPflmHNsgGcrl44SRatar78HCcxnbsB8aBEzFkkMlxcK1YcUakPYYLsA9xRxhrYMaXjbJM/FR4XJaAj1uLaf6z6OhDzdP9xvqgBCOYGeyXlp6/D2LEYTQUALp8skKrKmenGheH9/6JjVjHl4+FPHKTfymdoxAymgSqvFycnpnLUSM9M3myFp9BB0qHMMJIwM1o2D7wUV/r2fR01LTaVj3WDXbR1UHrDqEXaKEb7P7J3737IRuTw8qeAZsMrxCgYYbygg/N6mjRAg0jB2/mnqXszUI0BA1dboyuwzuadPEJcweG4b0rC5njOhH5Eq9Tfj2ixOS7H6lk8jIoHWQnQRaZijQJRMx3LKLqKKEFRtF6C7lafRGUnrWSU2/c6rcKI5Jv2Mo1OSdg5dQMotUx8NGYIFHsTVuZzMPM5l7SqZ2tpUQaWaolzzSZf3ZNo=";
		String caB64 = "MIIEVzCCAr+gAwIBAgIBATANBgkqhkiG9w0BAQ0FADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNDExMDkzMDEyWhcNMjUwNDExMDkzMDEyWjBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQChAl5g1wWKs3If1lebUeFVWxNO60uYMtUV60Sat2shEsRmnmHD1cWTyK1blEQpxKFbjxqNIoVabmBzMT3pdS8oaAuQXCx5zaVGU83NXuAELg1V3GbjmbEj1sMeE1cVEceb1GJJgCw2s0P6++opalJHC+8loihRUi2hZE6NoEHYPcjqBSXWfOzsiuCA0aEoanRwZ7UG/uqdZYShAh59Juan56fhy78cvBQn0N0njij8dk+0e7JFf+LBRORLTAGSlyepVx6MST8ZoQ51HusZnfdG/LO1DWoqsdS26y+PasiNee5xNa1FOEViWh5V9AH8kFmE3DO0TOG640ure5nA7BkQ/1+eF1BqRuaZq8HERZbm7OVViO06gTJRpxtGuZigUtUTPc03On38c0xTMO4GhvsgnTHs2T7ABJY0hKkoygtVBwhH2JUexdjfqqOL5YYaR0kHXmSXq/O2aqwPRbeD8DzOIsB2UiYeX4374iXGTj7CqRHH0+gK5g5z5z/P80Abu1sCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRTxpLeSvXLPe4DdyS/cuVe/jbJjTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBDQUAA4IBgQBuMzdr4TUo6Kezeds1fmespxtWxkUTWQzSlFCnG3cpg5TLb/2aOx/2/9oiL4/CRW/sIS5jRAqd4+6cN+o7YuYYEPVMnLM2LLyyZjR7xH64PMzmlIOvxqIbXom8i2SY+7GHGnB00pDkJCDHVfZwLshCGOql4QgPbW1hz5Q81B95BJbC3AVyH6wWl5JUJ+SX16UEm9WE2Eoyqv4JNov3ZrU9tYjU3sqwu4CzE92RiBIYuaZ875pifemU97EZnWEZxOeF1jgHN5llWMeLt6ZwW/lWWFHaTjzy0HiijmAa984G5Iir3yMgyTqeDniZYGn3YjrM6vQTL0/B682BX6pADV4vLIrwcyWHUVqHUOXdvVipOkKFTrATgY2oW5VSsEJrGafDqb6MXfSjiv7ouTlY8eEslcV14Tt7KeDrSjOjzFfr5xSF+Amay9lUaDFWRGeAvMeJ1tqe1dwp+7G8Uh40bvO2KdduklD5LT671/pRbOWr5XItyu4rMfLhIM4DuHGnqck=";
		String crlB64Old = "MIICXTCBxgIBATANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUXDTI0MTEyMTE1NDY0MloXDTI1MDUyMTE1NDY0MlowRTAhAgIB9xcNMjQwMzExMDkzMDEyWjAMMAoGA1UdFQQDCgEBMCACAQYXDTI0MDMxMTA5MzAxMlowDDAKBgNVHRUEAwoBATANBgkqhkiG9w0BAQsFAAOCAYEAdeWMbnGK9mudE8bVjdRI1QJDInJenSyuYsikazZN8IEv8Ll3q/AMTCl+cRRBR6n6fjYh4LaJUCGF4l/ikDKyNgf8AMS+xqdiV2ZzYlWFQndXK1QYAdm/LC5O02VPGa6mk6Jox2epklzd3NVmmms/gBQ4bU2Q3OHELP1BrevziWQnqhyxnWmA5TXFknQtvQVDKdtHCGfI1qdMVclRsWDaFbSBwvcnE5WgKyDPX6NFP5sTXxCCBb/kiu6EX9OlNOAw2J/YkO1IjkZUZfnmKIgVMuSsbXLZ1oAdbtMl8PG/pYWHE6wKBj7S9K5nQIFIE/HYr5s6/4pqcQpTytyWzvWDFITKR94z+03fE5IRniauXKZXKHScfJ+KgQuioRkT3Y/H/1ifgPwaCR60X+DhDplO4B1WC6qlu4YiZTpkQJY35qbphl4k1WFhtDma/tqL8iC9tUK3cOXqt+8mL88+9faMhAaVPczCIrqsn+Id4fA0WNhci4DADz8q1YKJyxAhliRd";
		String crlB64New = "MIICXTCBxgIBATANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUXDTI0MTIxMzEwMDEwNVoXDTI1MDYxMzEwMDEwNVowRTAhAgIB9xcNMjQwMzExMDkzMDEyWjAMMAoGA1UdFQQDCgEBMCACAQYXDTI0MDMxMTA5MzAxMlowDDAKBgNVHRUEAwoBATANBgkqhkiG9w0BAQsFAAOCAYEASa/Z4GZIcinBhyK4BKgAwL1pH4X0r0ntjJLkbgdFStjeLx95qOLch3fHaN4my3bRhu/EU9NL/0CwiWNwIYllGT5Siz2KAevDbbLj+EqORot9TowjHKbvIsYmQY7FgRDxbWwYju/qHR0hEnQAW4X+CWak2vrjF3h9PMJIRKtkXi8AW9frlu1pc+M0PDALS6G+o2CjE5LBt2Wbw+udrZIfYGZKd7g7xz0X+nETAqGxgA8ocHIsYz1g1noFm3SSqThwsaB2xbk6QSYSRtffMu/rA2bLKfb74yIZy5gid228BCBv+XXrDZcQtVYCiZoEFew16PaE0dd3+a4qR3GVrSgtAsP/dSbxQrTJlwt7zrW/2TNIgxJ7ngMJVneIgOXqh9TCOzt2x5UxRzeZBDz9IS3S9SIdJYCTzXJHhPYxYSYpKG5lSat+gae4syoPLkyzGPv2YygTDAQXWNy5XSwSPjHsoNhS3YFGBcXaSoY0ef7cJpONJAP+H3L9Lynt5p8imUwh";

		String tstB64 = "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";

		CertificateToken cert = DSSUtils.loadCertificateFromBase64EncodedString(certB64);
		CertificateToken ca = DSSUtils.loadCertificateFromBase64EncodedString(caB64);

		SignatureCertificateSource certificateSource = mock(SignatureCertificateSource.class);
		when(certificateSource.getCertificates()).thenReturn(Arrays.asList(ca, cert));

		OfflineCRLSource crlSource = new ExternalResourcesCRLSource(
				new InMemoryDocument(Utils.fromBase64(crlB64Old)));

		AdvancedSignature advancedSignature = mock(AdvancedSignature.class);
		when(advancedSignature.getSigningCertificateToken()).thenReturn(cert);
		when(advancedSignature.getCertificateSource()).thenReturn(certificateSource);
		when(advancedSignature.getCRLSource()).thenReturn(crlSource);

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addSignatureForVerification(advancedSignature);
		validationContext.addTimestampTokenForVerification(new TimestampToken(Utils.fromBase64(tstB64), TimestampType.SIGNATURE_TIMESTAMP));

		validationContext.validate();

		certificateVerifier.setAlertOnNoRevocationAfterBestSignatureTime(new ExceptionOnStatusAlert());
		assertFalse(validationContext.checkAllSignatureCertificateHaveFreshRevocationData());

		certificateVerifier.setAlertOnNoRevocationAfterBestSignatureTime(new SilentOnStatusAlert());
		assertFalse(validationContext.checkAllSignatureCertificateHaveFreshRevocationData());

		certificateVerifier.setAlertOnNoRevocationAfterBestSignatureTime(null);
		assertFalse(validationContext.checkAllSignatureCertificateHaveFreshRevocationData());

		crlSource = new ExternalResourcesCRLSource(
				new InMemoryDocument(Utils.fromBase64(crlB64New)));
		when(advancedSignature.getCRLSource()).thenReturn(crlSource);

		validationContext = new SignatureValidationContext();
		validationContext.initialize(certificateVerifier);

		validationContext.addSignatureForVerification(advancedSignature);
		validationContext.addTimestampTokenForVerification(new TimestampToken(Utils.fromBase64(tstB64), TimestampType.SIGNATURE_TIMESTAMP));

		crlSource = new ExternalResourcesCRLSource(new InMemoryDocument(Utils.fromBase64(crlB64New)));
		validationContext.addDocumentCRLSource(crlSource);
		validationContext.validate();

		certificateVerifier.setAlertOnNoRevocationAfterBestSignatureTime(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkAllSignatureCertificateHaveFreshRevocationData());

		certificateVerifier.setAlertOnNoRevocationAfterBestSignatureTime(new SilentOnStatusAlert());
		assertTrue(validationContext.checkAllSignatureCertificateHaveFreshRevocationData());

		certificateVerifier.setAlertOnNoRevocationAfterBestSignatureTime(null);
		assertTrue(validationContext.checkAllSignatureCertificateHaveFreshRevocationData());
	}

	@Test
	void checkAllSignaturesNotExpiredTest() {
		String goodCertB64 = "MIIE1DCCAzygAwIBAgIBCjANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjMwNTExMDkzMDEyWhcNMjUwMzExMDkzMDEyWjBPMRIwEAYDVQQDDAlnb29kLXVzZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBALX1sy8jRXKTIsDdv9PxSSRK8WUl1f4IUfK7eSyukPyBFOxWw4CmrRKIkT6uxyu4m5QnV5pH205Pg1Sqt02QtGYvuOrracQqcVhysiwSAssP8TTiVAPYRY7F8r+y6/ejxkNNYPWS5n71Kw2X+2iPlqqjUXvSgpt5tI42wuurNs7HusbTvkuNwyJ1nX8RLYy/oZroGmgUJ9mS3PpgOjqgT4Szgv5YWZgak4qvDlgXsrYEJJoSEYvDaz5zWEVmyMeBAWXzqD2EwuKso81l/2F0F3rB9R2tIt/Q6cZp0jvCvk49PYnpnEmNyqZ0YywXxWjejqr5cMbtPaNEjCc4gkK68n3EGFsTEoRvxWu0jbiy5RiXjoCJMXsZ2c//yPM0BKM7ggwB46WM6V0izEUzyODYB1VZuuFmcVAxqfvVCHUD3nDJDJcDw3FFK5o39lSVcMibZiI9OkQ0mS2etxSDqPer3mnw1SqzJI+07P0SLaY342T1O9Uxgj2XH3V5ev8jLDcfDwIDAQABo4G8MIG5MA4GA1UdDwEB/wQEAwIGQDCBhwYIKwYBBQUHAQEEezB5MDkGCCsGAQUFBzABhi1odHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9vY3NwL2dvb2QtY2EwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9nb29kLWNhLmNydDAdBgNVHQ4EFgQUPb1pbH/SdKVwt/wUoHujt7QG5CcwDQYJKoZIhvcNAQELBQADggGBAB1lKWCyViP6ucFOrJiV+f5AO39i4gigbGbRccY0iGl4jPFGXHb6VcRYYYrUOAmUttS6NinPkRmjs7qaDaa7MzxZkj9DQ/2S9OcVPJS2J9R9npGrWO4zVG4rXVTVqV3o2/A6g/zSL6N6K3ne9P4s0Oz8NZQUR/CYVUUXAub4j/HeYHC+6iIegpdFKyhp+bGmnjG6m5iVEb68u3dN6fcSzfg+vPwdTNumFRTtl9mj+R/pFp8+hxZIPYmWab4ADuHPQt3u/DmK8EiqxprTG+EAVqMbCyuVwFdNMLPyXczP1jkFKqD+wFy7bdgIWwQGHVPscP2h1RzCu0Gz/RVtEestaSN3njPtcXoVg9fzIu3zaN991WBQBDt+7a6tzycb7saNR4YfaleHXe55KvXvS22uLNUL4nWAjWPtHla6eeUYaEkXDoLg5Z7kJuBp6YOQ9cvcYpHJ9XdTQFNN7hOGjKmIb8Twm/Imlmvw4CxNm3uDFr6BBJSeYgMKr0mYyrDw5wyl5g==";
		CertificateToken goodCert = DSSUtils.loadCertificateFromBase64EncodedString(goodCertB64);

		AdvancedSignature advancedSignature = mock(AdvancedSignature.class);
		when(advancedSignature.getSigningCertificateToken()).thenReturn(goodCert);

		Calendar calendar = Calendar.getInstance();
		calendar.set(2024, Calendar.DECEMBER, 1);

		CertificateVerifier certificateVerifier = new CommonCertificateVerifier();
		SignatureValidationContext validationContext = new SignatureValidationContext(calendar.getTime());
		validationContext.initialize(certificateVerifier);

		validationContext.addSignatureForVerification(advancedSignature);

		validationContext.validate();

		certificateVerifier.setAlertOnExpiredCertificate(new ExceptionOnStatusAlert());
		assertTrue(validationContext.checkAllSignaturesNotExpired());

		certificateVerifier.setAlertOnExpiredCertificate(new SilentOnStatusAlert());
		assertTrue(validationContext.checkAllSignaturesNotExpired());

		certificateVerifier.setAlertOnExpiredCertificate(null);
		assertTrue(validationContext.checkAllSignaturesNotExpired());

		calendar = Calendar.getInstance();
		calendar.set(2026, Calendar.DECEMBER, 1);

		validationContext = new SignatureValidationContext(calendar.getTime());
		validationContext.initialize(certificateVerifier);

		validationContext.addSignatureForVerification(advancedSignature);

		validationContext.validate();

		certificateVerifier.setAlertOnExpiredCertificate(new ExceptionOnStatusAlert());
		assertFalse(validationContext.checkAllSignaturesNotExpired());

		certificateVerifier.setAlertOnExpiredCertificate(new SilentOnStatusAlert());
		assertFalse(validationContext.checkAllSignaturesNotExpired());

		certificateVerifier.setAlertOnExpiredCertificate(null);
		assertFalse(validationContext.checkAllSignaturesNotExpired());
	}

	private static class MockAIASource extends DefaultAIASource {

		private static final long serialVersionUID = -5890796098843749473L;
		private int requestCounter = 0;

		public MockAIASource(DataLoader dataLoader) {
			super(dataLoader);
		}

		@Override
		public Set<CertificateToken> getCertificatesByAIA(CertificateToken certificateToken) {
			++requestCounter;
			return super.getCertificatesByAIA(certificateToken);
		}

	}

}
